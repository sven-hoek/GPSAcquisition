package de.amidar.testbench.mandelbrot;

public class MandelbrotCGRA {
	private static int DEFAULT_WIDTH = 640;
	private static int DEFAULT_HEIGHT = 480;
	
	private static final float[] blue = {0.0f, 0.0f, 1.0f, 1.0f};
	private static final float[] white = {1.0f, 1.0f, 1.0f, 1.0f};
	private static final float[] yellow = {1.0f, 1.0f, 0.0f, 1.0f};
	private static final float[] red = {1.0f, 0.0f, 0.0f, 1.0f};
	private static final float[][] colorCycle = {blue, white, yellow, red};
	private static final int colorResolution = 16;
	
	//Mandelbrot settings 
	private float mbX = -2;
	private float mbY = -2;
	private float mbHeight = 4;
	private float mbWidth = 4;
	private int mbIterations = 128;

	//Display settings
	protected int pictureWidth;
	protected int pictureHeight;
	protected int[] pictureBuffer;
	
	private int[] precomputedColors = {
			255, 987135, 2039807, 3092479, 4145151, 5197823, 6250495, 7303167, 8355839, 9408511,
			10461183, 11513855, 12566527, 13619199, 14671871, 15724543, 16777215, 16777207, 16777199, 16777191,
			16777183, 16777175, 16777167, 16777159, 16777151, 16777143, 16777135, 16777127, 16777119, 16777111,
			16777103, 16777095, 16777087, 16777079, 16777071, 16777063, 16777055, 16777047, 16777039, 16777031,
			16777023, 16777015, 16777007, 16776999, 16776991, 16776983, 16776975, 16776967, 16776960, 16775936,
			16774912, 16773888, 16772864, 16771840, 16770816, 16769792, 16768768, 16767744, 16766720, 16765696,
			16764672, 16763648, 16762624, 16761600, 16760576, 16759552, 16758528, 16757504, 16756480, 16755456,
			16754432, 16753408, 16752384, 16751360, 16750336, 16749312, 16748288, 16747264, 16746240, 16745216,
			16744192, 16743168, 16742144, 16741120, 16740096, 16739072, 16738048, 16737024, 16736000, 16734976,
			16733952, 16732928, 16731904, 16730880, 16729856, 16728832, 16727808, 16726784, 16725760, 16724736,
			16723712, 16722688, 16721664, 16720640, 16719616, 16718592, 16717568, 16716544, 16715520, 16714496,
			16713472, 16712448, 16711680, 16580609, 16449539, 16318469, 16187399, 16056329, 15925259, 15794189,
			15663119, 15532049, 15400979, 15269909, 15138839, 15007769, 14876699, 14745629, 0			
	};
	
//	private int[] pictureBufferRef = {
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 5197823, 6250495, 6250495, 5197823, 5197823, 5197823, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823,
//			5197823, 7303167, 16777191, 9408511, 8355839, 5197823, 5197823, 5197823, 5197823, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823,
//			6250495, 6250495, 8355839, 14671871, 9408511, 6250495, 6250495, 6250495, 6250495, 5197823,
//			5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823,
//			6250495, 6250495, 7303167, 13619199, 16777175, 9408511, 7303167, 7303167, 7303167, 8355839,
//			6250495, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823,
//			6250495, 6250495, 7303167, 9408511, 11513855, 13619199, 9408511, 10461183, 11513855, 16777215,
//			16777215, 6250495, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495,
//			6250495, 7303167, 8355839, 8355839, 10461183, 14671871, 15724543, 16777167, 11513855, 9408511,
//			7303167, 6250495, 5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495,
//			7303167, 7303167, 8355839, 9408511, 10461183, 14671871, 16777167, 11513855, 9408511, 8355839,
//			7303167, 6250495, 6250495, 5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 7303167,
//			8355839, 9408511, 9408511, 16777143, 16777055, 16777111, 16777151, 15724543, 11513855, 8355839,
//			8355839, 7303167, 6250495, 5197823, 5197823, 5197823, 5197823, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 8355839, 9408511,
//			13619199, 14671871, 12566527, 14671871, 16777135, 0, 0, 16777175, 12566527, 10461183,
//			9408511, 13619199, 7303167, 6250495, 5197823, 5197823, 5197823, 5197823, 5197823, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823,
//			5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495, 7303167, 9408511, 14671871,
//			16777215, 16777183, 16777183, 0, 0, 0, 0, 16728832, 16777143, 14671871,
//			16777071, 11513855, 8355839, 6250495, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807,
//			2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823,
//			5197823, 6250495, 6250495, 6250495, 6250495, 6250495, 7303167, 7303167, 8355839, 10461183,
//			14671871, 16769792, 0, 0, 0, 0, 0, 0, 0, 0,
//			16777199, 11513855, 8355839, 7303167, 6250495, 6250495, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807,
//			2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 6250495, 6250495,
//			6250495, 6250495, 6250495, 6250495, 7303167, 7303167, 7303167, 8355839, 8355839, 11513855,
//			16776960, 16777087, 0, 0, 0, 0, 0, 0, 0, 16777039,
//			16777215, 10461183, 8355839, 7303167, 7303167, 6250495, 6250495, 6250495, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495, 6250495,
//			6250495, 6250495, 7303167, 7303167, 7303167, 7303167, 8355839, 8355839, 9408511, 11513855,
//			15724543, 16716544, 0, 0, 0, 0, 0, 0, 0, 0,
//			15724543, 10461183, 8355839, 8355839, 7303167, 7303167, 6250495, 6250495, 6250495, 6250495,
//			6250495, 6250495, 6250495, 5197823, 5197823, 5197823, 4145151, 4145151, 4145151, 4145151,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			5197823, 5197823, 5197823, 5197823, 6250495, 7303167, 7303167, 8355839, 8355839, 16777159,
//			8355839, 8355839, 8355839, 8355839, 8355839, 9408511, 9408511, 9408511, 10461183, 11513855,
//			14671871, 16745216, 0, 0, 0, 0, 0, 0, 0, 16777143,
//			13619199, 11513855, 10461183, 9408511, 9408511, 8355839, 8355839, 7303167, 6250495, 6250495,
//			6250495, 6250495, 6250495, 7303167, 16777199, 7303167, 5197823, 4145151, 4145151, 4145151,
//			4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 6250495, 7303167, 13619199, 16777167, 13619199, 15724543, 16777135,
//			11513855, 9408511, 9408511, 9408511, 12566527, 16767744, 16777207, 12566527, 0, 14671871,
//			16777215, 16777199, 16777159, 0, 0, 0, 0, 0, 16777159, 16777207,
//			15724543, 14671871, 16777175, 11513855, 11513855, 16777215, 16777191, 9408511, 8355839, 7303167,
//			7303167, 7303167, 7303167, 8355839, 11513855, 16777199, 6250495, 5197823, 4145151, 4145151,
//			4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 6250495, 6250495, 6250495, 7303167, 9408511, 13619199, 16776983, 16777079, 16777167,
//			16777191, 16777143, 11513855, 12566527, 16777215, 16777031, 16757504, 16777095, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 16777191, 16777039, 15925259, 16777175, 11513855, 9408511, 9408511,
//			9408511, 9408511, 9408511, 10461183, 14671871, 11513855, 8355839, 6250495, 5197823, 4145151,
//			4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			6250495, 6250495, 6250495, 7303167, 7303167, 9408511, 12566527, 14671871, 16777007, 0,
//			0, 16777095, 16777215, 16777103, 16777135, 16777031, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 16777183, 15724543, 12566527, 11513855,
//			14671871, 16777007, 15724543, 16777215, 16777215, 16777191, 15724543, 7303167, 5197823, 5197823,
//			4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495,
//			6250495, 6250495, 6250495, 7303167, 8355839, 9408511, 10461183, 16776991, 16777007, 0,
//			0, 0, 16777127, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 16777143, 16777215,
//			0, 0, 0, 0, 16777183, 13619199, 16777143, 6250495, 5197823, 5197823,
//			5197823, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135,
//			987135, 987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151,
//			4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495,
//			6250495, 6250495, 7303167, 8355839, 8355839, 9408511, 11513855, 13619199, 14745629, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 16777119,
//			0, 0, 0, 0, 15724543, 10461183, 8355839, 6250495, 5197823, 5197823,
//			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
//			987135, 987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151,
//			4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495, 6250495,
//			6250495, 7303167, 8355839, 9408511, 14671871, 12566527, 12566527, 16777007, 16762624, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 16777151, 16777183, 9408511, 7303167, 6250495, 6250495, 5197823,
//			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
//			987135, 987135, 987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823,
//			5197823, 6250495, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495, 6250495, 6250495, 7303167,
//			7303167, 8355839, 16777175, 16754432, 16777159, 16777087, 16777207, 16745216, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 16777175, 13619199, 10461183, 8355839, 7303167, 7303167, 6250495, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
//			987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 7303167, 8355839,
//			7303167, 6250495, 6250495, 6250495, 6250495, 6250495, 6250495, 6250495, 6250495, 6250495,
//			6250495, 6250495, 6250495, 6250495, 6250495, 6250495, 7303167, 7303167, 7303167, 7303167,
//			8355839, 9408511, 11513855, 16756480, 16751360, 0, 16772864, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 16777191, 16777119, 9408511, 8355839, 7303167, 7303167, 6250495,
//			5197823, 5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 6250495, 7303167, 10461183,
//			12566527, 8355839, 7303167, 7303167, 7303167, 7303167, 7303167, 7303167, 7303167, 7303167,
//			7303167, 7303167, 7303167, 7303167, 7303167, 7303167, 7303167, 7303167, 7303167, 8355839,
//			8355839, 9408511, 11513855, 13619199, 16777183, 16777031, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 16777207, 11513855, 9408511, 9408511, 16777191, 7303167,
//			5197823, 5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 10461183,
//			13619199, 9408511, 8355839, 8355839, 7303167, 7303167, 8355839, 8355839, 10461183, 16777199,
//			9408511, 8355839, 8355839, 7303167, 7303167, 7303167, 7303167, 8355839, 8355839, 8355839,
//			9408511, 13619199, 16759552, 16777095, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 16777007, 16777127, 14671871, 13619199, 7303167,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 10461183,
//			16777199, 12566527, 12566527, 11513855, 16777215, 9408511, 9408511, 10461183, 14671871, 16777215,
//			11513855, 9408511, 9408511, 10461183, 9408511, 8355839, 8355839, 8355839, 9408511, 9408511,
//			10461183, 13619199, 16777159, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 16777175, 16777079, 7303167,
//			6250495, 5197823, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823,
//			5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 7303167, 8355839,
//			10461183, 12566527, 16777215, 16777127, 16777183, 16777207, 12566527, 11513855, 13619199, 16777207,
//			16777063, 15724543, 13619199, 16777207, 11513855, 10461183, 9408511, 9408511, 9408511, 10461183,
//			11513855, 16777207, 16777151, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 16777167, 15724543, 10461183, 8355839, 6250495,
//			6250495, 5197823, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 2039807, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 7303167, 8355839,
//			9408511, 11513855, 13619199, 16777151, 0, 0, 16777191, 16777175, 16777103, 14745629,
//			0, 16777135, 16777183, 16777127, 16777151, 16763648, 12566527, 11513855, 11513855, 11513855,
//			12566527, 16777199, 16777007, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 13619199, 9408511, 8355839, 6250495,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 7303167, 7303167, 9408511,
//			9408511, 12566527, 16777199, 16777111, 0, 0, 16776960, 0, 0, 0,
//			0, 0, 0, 0, 16775936, 16712448, 16777199, 14671871, 12566527, 13619199,
//			14671871, 16777063, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 16752384, 15724543, 11513855, 6250495,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 7303167, 7303167, 8355839, 12566527,
//			11513855, 14671871, 16777199, 16777111, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 16777143, 15724543, 15724543,
//			16777215, 16776983, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 16777095, 16777167, 7303167, 6250495,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 6250495, 8355839, 8355839, 8355839, 8355839, 9408511, 10461183, 12566527,
//			16777071, 16768768, 16777087, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 16722688, 16777199,
//			16777183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 16715520, 12566527, 8355839, 7303167, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495, 6250495,
//			6250495, 7303167, 8355839, 10461183, 13619199, 10461183, 9408511, 10461183, 11513855, 12566527,
//			16777215, 16777103, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 16777135,
//			16777143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 16749312, 16776983, 7303167, 6250495, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 5197823, 6250495, 6250495, 6250495, 6250495, 6250495, 6250495, 6250495, 7303167,
//			7303167, 7303167, 8355839, 9408511, 12566527, 15724543, 13619199, 16777143, 14671871, 15724543,
//			16777167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			16777079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 16777151, 8355839, 6250495, 6250495, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495,
//			7303167, 7303167, 6250495, 6250495, 6250495, 6250495, 6250495, 7303167, 7303167, 7303167,
//			7303167, 8355839, 9408511, 10461183, 12566527, 16777183, 16724736, 16777095, 16777079, 16777159,
//			16777095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			16776960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 16750336, 9408511, 7303167, 6250495, 6250495, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495, 7303167, 7303167, 10461183,
//			10461183, 7303167, 8355839, 8355839, 8355839, 10461183, 8355839, 8355839, 8355839, 9408511,
//			10461183, 12566527, 11513855, 13619199, 16777167, 16777151, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			16728832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 16777215, 9408511, 7303167, 7303167, 6250495, 6250495, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			7303167, 16777167, 16777167, 16777151, 16777127, 16777143, 16777119, 16777127, 16777071, 0,
//			0, 16777095, 16777103, 16776991, 16777023, 0, 16777071, 0, 16777055, 16776999,
//			16770816, 0, 16766720, 16750336, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 16777199, 12566527, 10461183, 8355839, 7303167, 7303167, 6250495, 6250495, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495, 7303167, 7303167, 10461183,
//			10461183, 7303167, 8355839, 8355839, 8355839, 10461183, 8355839, 8355839, 8355839, 9408511,
//			10461183, 12566527, 11513855, 13619199, 16777167, 16777151, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			16728832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 16777215, 9408511, 7303167, 7303167, 6250495, 6250495, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495,
//			7303167, 7303167, 6250495, 6250495, 6250495, 6250495, 6250495, 7303167, 7303167, 7303167,
//			7303167, 8355839, 9408511, 10461183, 12566527, 16777183, 16742144, 16777095, 16777079, 16777159,
//			16777095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			16776960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 16750336, 9408511, 7303167, 6250495, 6250495, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 5197823, 6250495, 6250495, 6250495, 6250495, 6250495, 6250495, 6250495, 7303167,
//			7303167, 7303167, 8355839, 9408511, 12566527, 15724543, 13619199, 16777143, 14671871, 15724543,
//			16777167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			16777079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 16777151, 8355839, 6250495, 6250495, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495, 6250495,
//			6250495, 7303167, 8355839, 10461183, 13619199, 10461183, 9408511, 10461183, 11513855, 12566527,
//			16777215, 16777103, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 16777135,
//			16777143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 16749312, 16776983, 7303167, 6250495, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 6250495, 8355839, 8355839, 8355839, 8355839, 9408511, 10461183, 12566527,
//			16777071, 16768768, 16777087, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 16722688, 16777199,
//			16777183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 16715520, 12566527, 8355839, 7303167, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 7303167, 7303167, 8355839, 12566527,
//			11513855, 14671871, 16777199, 16777111, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 16777143, 15724543, 15724543,
//			16777215, 16776983, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 16777095, 16777167, 7303167, 6250495,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 7303167, 7303167, 9408511,
//			9408511, 12566527, 16777199, 16777111, 0, 0, 16776960, 0, 0, 0,
//			0, 0, 0, 0, 16775936, 16712448, 16777199, 14671871, 12566527, 13619199,
//			14671871, 16777063, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 16752384, 15724543, 11513855, 6250495,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 2039807, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 7303167, 8355839,
//			9408511, 11513855, 13619199, 16777151, 0, 0, 16777191, 16777175, 16777103, 0,
//			0, 16777135, 16777183, 16777127, 16777151, 16764672, 12566527, 11513855, 11513855, 11513855,
//			12566527, 16777199, 16777007, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 13619199, 9408511, 8355839, 6250495,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823,
//			5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 7303167, 8355839,
//			10461183, 12566527, 16777215, 16777127, 16777183, 16777207, 12566527, 11513855, 13619199, 16777207,
//			16777063, 15724543, 13619199, 16777207, 11513855, 10461183, 9408511, 9408511, 9408511, 10461183,
//			11513855, 16777207, 16777151, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 16777167, 15724543, 10461183, 8355839, 6250495,
//			6250495, 5197823, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 987135, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 10461183,
//			16777199, 12566527, 12566527, 11513855, 16777215, 9408511, 9408511, 10461183, 14671871, 16777215,
//			11513855, 9408511, 9408511, 10461183, 9408511, 8355839, 8355839, 8355839, 9408511, 9408511,
//			10461183, 13619199, 16777159, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 16777175, 16777079, 7303167,
//			6250495, 5197823, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 10461183,
//			13619199, 9408511, 8355839, 8355839, 7303167, 7303167, 8355839, 8355839, 10461183, 16777199,
//			9408511, 8355839, 8355839, 7303167, 7303167, 7303167, 7303167, 8355839, 8355839, 8355839,
//			9408511, 13619199, 16759552, 16777095, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 15269909, 16777007, 16777127, 14671871, 13619199, 7303167,
//			5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 6250495, 7303167, 10461183,
//			12566527, 8355839, 7303167, 7303167, 7303167, 7303167, 7303167, 7303167, 7303167, 7303167,
//			7303167, 7303167, 7303167, 7303167, 7303167, 7303167, 7303167, 7303167, 7303167, 8355839,
//			8355839, 9408511, 11513855, 13619199, 16777183, 16777031, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 16777207, 11513855, 9408511, 9408511, 16777191, 7303167,
//			5197823, 5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 7303167, 8355839,
//			7303167, 6250495, 6250495, 6250495, 6250495, 6250495, 6250495, 6250495, 6250495, 6250495,
//			6250495, 6250495, 6250495, 6250495, 6250495, 6250495, 7303167, 7303167, 7303167, 7303167,
//			8355839, 9408511, 11513855, 16757504, 16751360, 0, 16772864, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 16777191, 16777119, 9408511, 8355839, 7303167, 7303167, 6250495,
//			5197823, 5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823,
//			5197823, 6250495, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495, 6250495, 6250495, 7303167,
//			7303167, 8355839, 16777175, 16756480, 16777159, 16777087, 16777207, 16745216, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 16777175, 13619199, 10461183, 8355839, 7303167, 7303167, 6250495, 5197823,
//			5197823, 5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
//			987135, 987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151,
//			4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495, 6250495,
//			6250495, 7303167, 8355839, 9408511, 14671871, 12566527, 12566527, 16777015, 16762624, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 16777151, 16777183, 9408511, 7303167, 6250495, 6250495, 5197823,
//			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
//			987135, 987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151,
//			4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495,
//			6250495, 6250495, 7303167, 8355839, 8355839, 9408511, 11513855, 13619199, 16056329, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 16777119,
//			0, 0, 0, 0, 15724543, 10461183, 8355839, 6250495, 5197823, 5197823,
//			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
//			987135, 987135, 987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495,
//			6250495, 6250495, 6250495, 7303167, 8355839, 9408511, 10461183, 16776991, 16777007, 0,
//			0, 0, 16777127, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 16777143, 16777215,
//			0, 0, 0, 0, 16777183, 13619199, 16777143, 6250495, 5197823, 5197823,
//			5197823, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			6250495, 6250495, 6250495, 7303167, 7303167, 9408511, 12566527, 14671871, 16777007, 0,
//			0, 16777095, 16777215, 16777103, 16777135, 16777031, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 0, 0, 0, 16777183, 15724543, 12566527, 11513855,
//			14671871, 16777007, 15724543, 16777215, 16777215, 16777191, 15724543, 7303167, 5197823, 5197823,
//			4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 6250495, 6250495, 6250495, 7303167, 9408511, 13619199, 16776983, 16777079, 16777167,
//			16777191, 16777143, 11513855, 12566527, 16777215, 16777031, 16757504, 16777095, 0, 0,
//			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//			0, 0, 0, 16777191, 16777039, 15794189, 16777175, 11513855, 9408511, 9408511,
//			9408511, 9408511, 9408511, 10461183, 14671871, 11513855, 8355839, 6250495, 5197823, 4145151,
//			4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 6250495, 7303167, 13619199, 16777167, 13619199, 15724543, 16777135,
//			11513855, 9408511, 9408511, 9408511, 12566527, 16767744, 16777207, 12566527, 16726784, 14671871,
//			16777215, 16777199, 16777159, 0, 0, 0, 0, 0, 16777159, 16777207,
//			15724543, 14671871, 16777175, 11513855, 11513855, 16777215, 16777191, 9408511, 8355839, 7303167,
//			7303167, 7303167, 7303167, 8355839, 11513855, 16777199, 6250495, 5197823, 4145151, 4145151,
//			4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			5197823, 5197823, 5197823, 5197823, 6250495, 7303167, 7303167, 8355839, 8355839, 16777159,
//			8355839, 8355839, 8355839, 8355839, 8355839, 9408511, 9408511, 9408511, 10461183, 11513855,
//			14671871, 16716544, 0, 0, 0, 0, 0, 0, 0, 16777143,
//			13619199, 11513855, 10461183, 9408511, 9408511, 8355839, 8355839, 7303167, 6250495, 6250495,
//			6250495, 6250495, 6250495, 7303167, 16777199, 7303167, 5197823, 4145151, 4145151, 4145151,
//			4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495, 6250495,
//			6250495, 6250495, 7303167, 7303167, 7303167, 7303167, 8355839, 8355839, 9408511, 11513855,
//			15724543, 0, 0, 0, 0, 0, 0, 0, 0, 14745629,
//			15724543, 10461183, 8355839, 8355839, 7303167, 7303167, 6250495, 6250495, 6250495, 6250495,
//			6250495, 6250495, 6250495, 5197823, 5197823, 5197823, 4145151, 4145151, 4145151, 4145151,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807,
//			2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 6250495, 6250495,
//			6250495, 6250495, 6250495, 6250495, 7303167, 7303167, 7303167, 8355839, 8355839, 11513855,
//			16775936, 16777087, 0, 0, 0, 0, 0, 0, 0, 16777039,
//			16777215, 10461183, 8355839, 7303167, 7303167, 6250495, 6250495, 6250495, 5197823, 5197823,
//			5197823, 5197823, 5197823, 5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807,
//			2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823,
//			5197823, 6250495, 6250495, 6250495, 6250495, 6250495, 7303167, 7303167, 8355839, 10461183,
//			14671871, 16769792, 0, 0, 0, 0, 0, 0, 0, 0,
//			16777199, 11513855, 8355839, 7303167, 6250495, 6250495, 5197823, 5197823, 5197823, 5197823,
//			5197823, 5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823,
//			5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 6250495, 7303167, 9408511, 14671871,
//			16777215, 16777183, 16777183, 0, 0, 0, 0, 16733952, 16777143, 14671871,
//			16777071, 11513855, 8355839, 6250495, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823,
//			5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 8355839, 9408511,
//			13619199, 14671871, 12566527, 14671871, 16777135, 0, 0, 16777175, 12566527, 10461183,
//			9408511, 13619199, 7303167, 6250495, 5197823, 5197823, 5197823, 5197823, 5197823, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495, 7303167,
//			8355839, 9408511, 9408511, 16777143, 16777047, 16777111, 16777151, 15724543, 11513855, 8355839,
//			8355839, 7303167, 6250495, 5197823, 5197823, 5197823, 5197823, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495,
//			7303167, 7303167, 8355839, 9408511, 10461183, 14671871, 16777167, 11513855, 9408511, 8355839,
//			7303167, 6250495, 6250495, 5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823, 6250495,
//			6250495, 7303167, 8355839, 8355839, 10461183, 14671871, 15724543, 16777167, 11513855, 9408511,
//			7303167, 6250495, 5197823, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823,
//			6250495, 6250495, 7303167, 9408511, 11513855, 13619199, 9408511, 10461183, 11513855, 16777215,
//			16777199, 6250495, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823,
//			6250495, 6250495, 7303167, 13619199, 16777175, 9408511, 7303167, 7303167, 7303167, 8355839,
//			6250495, 5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823,
//			6250495, 6250495, 8355839, 14671871, 9408511, 6250495, 6250495, 6250495, 6250495, 5197823,
//			5197823, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823,
//			5197823, 7303167, 16777191, 9408511, 8355839, 5197823, 5197823, 5197823, 5197823, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
//			4145151, 5197823, 6250495, 6250495, 5197823, 5197823, 5197823, 4145151, 4145151, 4145151,
//			4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151,
//			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
//			3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
//			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
//			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135	
//	};
	
	//80x60
	private int[] pictureBufferRef = {
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 6250495, 5197823, 5197823, 4145151,
			4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151,
			4145151, 4145151, 4145151, 4145151, 5197823, 6250495, 8355839, 9408511, 6250495, 6250495,
			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
			2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151,
			4145151, 4145151, 4145151, 5197823, 5197823, 6250495, 7303167, 11513855, 9408511, 11513855,
			16777183, 5197823, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151,
			4145151, 4145151, 5197823, 5197823, 5197823, 7303167, 8355839, 10461183, 16777167, 9408511,
			7303167, 6250495, 5197823, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479,
			3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
			4145151, 5197823, 5197823, 6250495, 8355839, 13619199, 12566527, 16777135, 0, 12566527,
			9408511, 7303167, 5197823, 5197823, 5197823, 4145151, 4145151, 4145151, 3092479, 3092479,
			3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823,
			5197823, 6250495, 6250495, 7303167, 8355839, 14671871, 0, 0, 0, 0,
			16777199, 8355839, 6250495, 5197823, 5197823, 5197823, 5197823, 4145151, 4145151, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135,
			987135, 987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 6250495, 6250495,
			6250495, 7303167, 7303167, 8355839, 9408511, 15724543, 0, 0, 0, 0,
			15724543, 8355839, 7303167, 6250495, 6250495, 6250495, 6250495, 5197823, 4145151, 4145151,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
			987135, 987135, 987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151,
			4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 7303167, 16777167, 15724543,
			11513855, 9408511, 12566527, 16777207, 0, 16777215, 16777159, 0, 0, 16777159,
			15724543, 16777175, 11513855, 16777191, 8355839, 7303167, 7303167, 11513855, 6250495, 4145151,
			4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
			987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151,
			4145151, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 12566527, 16777007,
			0, 16777215, 16777135, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 16777183, 12566527, 14671871, 15724543, 16777215, 15724543, 5197823,
			4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
			987135, 987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 5197823, 5197823, 5197823,
			5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 8355839, 11513855, 16318469,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 15724543, 8355839, 5197823,
			5197823, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
			987135, 987135, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823,
			5197823, 5197823, 6250495, 6250495, 6250495, 7303167, 16777175, 16777159, 16777207, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 16777175, 10461183, 7303167, 6250495,
			5197823, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
			987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151,
			4145151, 4145151, 5197823, 5197823, 7303167, 12566527, 7303167, 7303167, 7303167, 7303167,
			7303167, 7303167, 7303167, 7303167, 7303167, 8355839, 11513855, 16777183, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 16777207, 9408511, 16777191,
			5197823, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151,
			4145151, 5197823, 5197823, 6250495, 7303167, 16777199, 12566527, 16777215, 9408511, 14671871,
			11513855, 9408511, 9408511, 8355839, 9408511, 10461183, 16777159, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 16777079,
			6250495, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823,
			5197823, 5197823, 5197823, 6250495, 7303167, 9408511, 13619199, 0, 16777191, 16777103,
			0, 16777183, 16777151, 12566527, 11513855, 12566527, 16777007, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 13619199, 8355839,
			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823,
			5197823, 5197823, 6250495, 7303167, 8355839, 11513855, 16777199, 0, 0, 0,
			0, 0, 0, 0, 15724543, 16777215, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 16777095, 7303167,
			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 6250495, 6250495,
			6250495, 8355839, 13619199, 9408511, 11513855, 16777215, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 16777143, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 16776983, 6250495,
			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 5197823, 5197823, 5197823, 5197823, 7303167, 6250495, 6250495, 6250495, 7303167,
			7303167, 9408511, 12566527, 16744192, 16777079, 16777095, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 16776960, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 16750336, 7303167, 6250495,
			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			6250495, 16777167, 16777135, 16777127, 16777071, 0, 16777111, 16777055, 16777079, 16777063,
			16770816, 16767744, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 12566527, 8355839, 7303167, 6250495,
			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 5197823, 5197823, 5197823, 5197823, 7303167, 6250495, 6250495, 6250495, 7303167,
			7303167, 9408511, 12566527, 16738048, 16777079, 16777095, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 16776960, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 16750336, 7303167, 6250495,
			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 6250495, 6250495,
			6250495, 8355839, 13619199, 9408511, 11513855, 16777215, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 16777143, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 16776983, 6250495,
			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 5197823,
			5197823, 5197823, 6250495, 7303167, 8355839, 11513855, 16777199, 0, 0, 0,
			0, 0, 0, 0, 15724543, 16777215, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 16777095, 7303167,
			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823,
			5197823, 5197823, 5197823, 6250495, 7303167, 9408511, 13619199, 0, 16777191, 16777103,
			0, 16777183, 16777151, 12566527, 11513855, 12566527, 16777007, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 13619199, 8355839,
			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151,
			4145151, 5197823, 5197823, 6250495, 7303167, 16777199, 12566527, 16777215, 9408511, 14671871,
			11513855, 9408511, 9408511, 8355839, 9408511, 10461183, 16777159, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 16777079,
			6250495, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151,
			4145151, 4145151, 5197823, 5197823, 7303167, 12566527, 7303167, 7303167, 7303167, 7303167,
			7303167, 7303167, 7303167, 7303167, 7303167, 8355839, 11513855, 16777183, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 16777207, 9408511, 16777191,
			5197823, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 987135, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 5197823, 5197823,
			5197823, 5197823, 6250495, 6250495, 6250495, 7303167, 16777175, 16777159, 16777207, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 16777175, 10461183, 7303167, 6250495,
			5197823, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
			987135, 987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 5197823, 5197823, 5197823,
			5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 8355839, 11513855, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 15724543, 8355839, 5197823,
			5197823, 4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
			987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151,
			4145151, 5197823, 5197823, 5197823, 5197823, 6250495, 6250495, 7303167, 12566527, 16777007,
			0, 16777215, 16777135, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 16777183, 12566527, 14671871, 15724543, 16777215, 15724543, 5197823,
			4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
			987135, 987135, 987135, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151,
			4145151, 4145151, 4145151, 4145151, 5197823, 5197823, 5197823, 7303167, 16777167, 15724543,
			11513855, 9408511, 12566527, 16777207, 16741120, 16777215, 16777159, 0, 0, 16777159,
			15724543, 16777175, 11513855, 16777191, 8355839, 7303167, 7303167, 11513855, 6250495, 4145151,
			4145151, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
			987135, 987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823, 6250495, 6250495,
			6250495, 7303167, 7303167, 8355839, 9408511, 15724543, 0, 0, 0, 0,
			15724543, 8355839, 7303167, 6250495, 6250495, 6250495, 6250495, 5197823, 4145151, 4145151,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
			987135, 987135, 987135, 987135, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 5197823,
			5197823, 6250495, 6250495, 7303167, 8355839, 14671871, 0, 0, 0, 0,
			16777199, 8355839, 6250495, 5197823, 5197823, 5197823, 5197823, 4145151, 4145151, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151, 4145151,
			4145151, 5197823, 5197823, 6250495, 8355839, 13619199, 12566527, 16777135, 0, 12566527,
			9408511, 7303167, 5197823, 5197823, 5197823, 4145151, 4145151, 4145151, 3092479, 3092479,
			3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 4145151,
			4145151, 4145151, 5197823, 5197823, 5197823, 7303167, 8355839, 10461183, 16777167, 9408511,
			7303167, 6250495, 5197823, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479,
			3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
			2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151, 4145151, 4145151,
			4145151, 4145151, 4145151, 5197823, 5197823, 6250495, 7303167, 11513855, 9408511, 11513855,
			16777207, 5197823, 4145151, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 4145151,
			4145151, 4145151, 4145151, 4145151, 5197823, 6250495, 8355839, 9408511, 6250495, 6250495,
			5197823, 4145151, 4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 4145151, 4145151, 4145151, 4145151, 6250495, 5197823, 5197823, 4145151,
			4145151, 4145151, 3092479, 3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479,
			3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 3092479, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807, 2039807,
			2039807, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135,
			987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135, 987135
	};
	
	public MandelbrotCGRA(int pw, int ph){
		pictureWidth = pw;
		pictureHeight = ph;
		pictureBuffer = new int[pw*ph];
	}
	
	public MandelbrotCGRA() {
		this(DEFAULT_WIDTH, DEFAULT_HEIGHT);
	}
	
	private int calculateMandelbrotIterations(float x, float y) {
		float xx = 0.0f;
		float yy = 0.0f;
		int iter = 0;
		int defaultIter = mbIterations;
        float xxXxCache;
        float yyYyCache;
        float temp;
        
        while ((xxXxCache=xx * xx) + (yyYyCache=yy * yy) <= 4.0f && iter<defaultIter) {
			temp = xxXxCache - yyYyCache + x;
			
			yy = 2.0f*xx*yy + y;

			xx = temp;

			iter ++;
		}

		return iter;
	}
	
	private void updateMandelbrotImage() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int index = 0;

		float y = mbY;
		for (int pY = 0;pY < pictureHeight; pY++, y+= deltaY) {
			float x = mbX;
			for (int pX=0;pX < pictureWidth; pX++, x+=deltaX) {
				//the real time consuming part!
				int iterations = calculateMandelbrotIterations(x,y);

				pictureBuffer[index] = precomputedColors[iterations];
				
				index++;
			}
		}

	}
	
	private void updateMandelbrotImageCGRA_2() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				
				int index0 = index++;
				int index1 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;

				float xx0 = 0.0f;
				float xx1 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		    		              
		        while (!(px0done && px1done)) {
		        	yy0 = xx0*yy0;
		        	yy1 = xx1*yy1;
		        	
				    yy0 += yy0;
				    yy1 += yy1;
				    
				    yy0 += y;
				    yy1 += y;
				        	
				    xx0 = xxXxCache0 - yyYyCache0 + x0;
				    xx1 = xxXxCache1 - yyYyCache1 + x1;
							
				    xxXxCache0 = xx0*xx0;
				    xxXxCache1 = xx1*xx1;
				    
				    yyYyCache0 = yy0*yy0;
				    yyYyCache1 = yy1*yy1;
				    
				    if(!px0done) iter0++;
				    if(!px1done) iter1++;
					
					px0done = px0done || !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
					px1done = px1done || !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    
			    x = x1 + deltaX;
			    pX = pX + 2;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_2_if() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				
				int index0 = index++;
				int index1 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;

				float xx0 = 0.0f;
				float xx1 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;

		              
		        while (!(px0done && px1done)) {
		        	if(!px0done){
		        		yy0 = xx0*yy0;
		        		yy0 += yy0;
		        		yy0 += y;
		        		xx0 = xxXxCache0 - yyYyCache0 + x0;
		        		xxXxCache0 = xx0*xx0;
		        		yyYyCache0 = yy0*yy0;
		        		iter0++;
		        		px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
		        	}

		        	if(!px1done) {
		        		yy1 = xx1*yy1;
		        		yy1 += yy1;
		        		yy1 += y;
		        		xx1 = xxXxCache1 - yyYyCache1 + x1;
		        		xxXxCache1 = xx1*xx1;
		        		yyYyCache1 = yy1*yy1;
		        		iter1++;
		        		px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
		        	} 
				 
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];

			    x = x1 + deltaX;
			    pX = pX + 2;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_2_v2() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				
				int index0 = index++;
				int index1 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;

				float xx0 = 0.0f;
				float xx1 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		    		              
		        while (!(px0done && px1done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
					
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    
			    x = x1 + deltaX;
			    pX = pX + 2;
			}
		}		
	}

	private void updateMandelbrotImageCGRA_4() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				
				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;

				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		              
		        while (!(px0done && px1done && px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy1 = xx1*yy1;
		        	yy2 = xx2*yy2;
		        	yy3 = xx3*yy3;
		        	
				    yy0 += yy0;
				    yy1 += yy1;
				    yy2 += yy2;
				    yy3 += yy3;
				    
				    yy0 += y;
				    yy1 += y;
				    yy2 += y;
				    yy3 += y;
				        	
				    xx0 = xxXxCache0 - yyYyCache0 + x0;
				    xx1 = xxXxCache1 - yyYyCache1 + x1;
				    xx2 = xxXxCache2 - yyYyCache2 + x2;
				    xx3 = xxXxCache3 - yyYyCache3 + x3;
							
				    xxXxCache0 = xx0*xx0;
				    xxXxCache1 = xx1*xx1;
				    xxXxCache2 = xx2*xx2;
				    xxXxCache3 = xx3*xx3;
				    
				    yyYyCache0 = yy0*yy0;
				    yyYyCache1 = yy1*yy1;
				    yyYyCache2 = yy2*yy2;
				    yyYyCache3 = yy3*yy3;
				    
				    if(!px0done) iter0++;
				    if(!px1done) iter1++;
				    if(!px2done) iter2++;
				    if(!px3done) iter3++;
				        	
//					if(!px0done) {
//						iter0++;
////						px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
//					}
//					if(!px1done) {
//						iter1++;
////						px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
//					}
//					if(!px2done) {
//						iter2++;
////						px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
//					}
//					if(!px3done) {
//						iter3++;
////						px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
//					}
					
					px0done = px0done || !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
					px1done = px1done || !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
					px2done = px2done || !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
					px3done = px3done || !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    
			    x = x3 + deltaX;
			    pX = pX + 4;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_4_v2() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				
				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;

				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		              
		        while (!(px0done && px1done && px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
					
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    
			    x = x3 + deltaX;
			    pX = pX + 4;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_4_v3() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				
				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;

				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		              
		        while (!px0done && !px1done && !px2done && !px3done) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	iter0++; 
		        	px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	iter1++; 
		        	px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	iter2++; 
		        	px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    iter3++; 
				    px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
		        }
		        
		        while (!px1done && !px2done && !px3done) {
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	iter1++; 
		        	px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	iter2++; 
		        	px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    iter3++; 
				    px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
		        }
		        
		        while (!px0done && !px2done && !px3done) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	iter0++; 
		        	px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	iter2++; 
		        	px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    iter3++; 
				    px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
		        }
		        
		        while (!px0done && !px1done && !px3done) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	iter0++; 
		        	px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	iter1++; 
		        	px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    iter3++; 
				    px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
		        }
		        
		        while (!px0done && !px1done && !px2done) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	iter0++; 
		        	px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	iter1++; 
		        	px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	iter2++; 
		        	px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
		        }
		        
		        while (!(px0done && px1done && px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}	
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    
			    x = x3 + deltaX;
			    pX = pX + 4;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_4_if() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				
				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;

				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		              
		        while (!(px0done && px1done && px2done && px3done)) {
		        	if(!px0done){
		        		yy0 = xx0*yy0;
		        		yy0 += yy0;
		        		yy0 += y;
		        		xx0 = xxXxCache0 - yyYyCache0 + x0;
		        		xxXxCache0 = xx0*xx0;
		        		yyYyCache0 = yy0*yy0;
		        		iter0++;
		        		px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
		        	}

		        	if(!px1done) {
		        		yy1 = xx1*yy1;
		        		yy1 += yy1;
		        		yy1 += y;
		        		xx1 = xxXxCache1 - yyYyCache1 + x1;
		        		xxXxCache1 = xx1*xx1;
		        		yyYyCache1 = yy1*yy1;
		        		iter1++;
		        		px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
		        	}
		        	
		        	if(!px2done) {
		        		yy2 = xx2*yy2;
		        		yy2 += yy2;
		        		yy2 += y;
		        		xx2 = xxXxCache2 - yyYyCache2 + x2;
		        		xxXxCache2 = xx2*xx2;
		        		yyYyCache2 = yy2*yy2;
		        		iter2++;
		        		px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
		        	}
		        	
		        	if(!px3done) {
		        		yy3 = xx3*yy3;
		        		yy3 += yy3;
		        		yy3 += y;
		        		xx3 = xxXxCache3 - yyYyCache3 + x3;
		        		xxXxCache3 = xx3*xx3;
		        		yyYyCache3 = yy3*yy3;
		        		iter3++;
		        		px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
		        	}  
				 
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    
			    x = x3 + deltaX;
			    pX = pX + 4;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_4_ifelse() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		int tmp[] = pictureBuffer; //new int[pictureWidth*pictureHeight];
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			
			//manual unrolling
			int index0bound = index + pictureWidth - 3;
			int index1bound = index + pictureWidth - 2;
			int index2bound = index + pictureWidth - 1;
			int index3bound = index + pictureWidth - 0;
			//float deltaXx4 = (deltaX + deltaX + deltaX + deltaX);
			float deltaXx4 = deltaX; deltaXx4 += deltaX; deltaXx4 += deltaX; deltaXx4 += deltaX; 
			
			boolean px0done = false;
			boolean px1done = false;
			boolean px2done = false;
			boolean px3done = false;
			
			int index0 = index;
			int index1 = index+1;
			int index2 = index+2;
			int index3 = index+3;
			
			float x0 = x;
			float x1 = x0 + deltaX;
			float x2 = x1 + deltaX;
			float x3 = x2 + deltaX;

			float xx0 = 0.0f;
			float xx1 = 0.0f;
			float xx2 = 0.0f;
			float xx3 = 0.0f;
			
			float yy0 = 0.0f;
			float yy1 = 0.0f;
			float yy2 = 0.0f;
			float yy3 = 0.0f;
			
			int iter0 = 0;
			int iter1 = 0;
			int iter2 = 0;
			int iter3 = 0;
			
	        float xxXxCache0 = 0f;
	        float xxXxCache1 = 0f;
	        float xxXxCache2 = 0f;
	        float xxXxCache3 = 0f;
	        
	        float yyYyCache0 = 0f;
	        float yyYyCache1 = 0f;
	        float yyYyCache2 = 0f;
	        float yyYyCache3 = 0f;
		              
	        while ((index0 < index0bound) || (index1 < index1bound) || (index2 < index2bound) || (index3 < index3bound)) {
	        	
	        	if(!px0done){
	        		yy0 = xx0*yy0;
	        		yy0 += yy0;
	        		yy0 += y;
	        		xx0 = xxXxCache0 - yyYyCache0 + x0;
	        		xxXxCache0 = xx0*xx0;
	        		yyYyCache0 = yy0*yy0;
	        		iter0++;
	        		px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
//	        		if(index0 < index0bound && px0done)tmp[index0] = precomputedColors[iter0]; 
	        	}else {
//	        		if(index0 < index0bound) {pictureBuffer[index0] = precomputedColors[iter0];/*px0done = false;*/}
	        		if(index0 < index0bound) {tmp[index0] = precomputedColors[iter0];/*px0done = false;*/}
	        		index0 += 4;
	        		x0 += deltaXx4;
//	        		x0 += deltaX;x0 += deltaX;x0 += deltaX;x0 += deltaX;
	        		xx0 = 0.0f;
	        		yy0 = 0.0f;
	        		iter0 = 0;
	        		xxXxCache0 = 0f;
	        		yyYyCache0 = 0f;
	        		px0done = false;
	        	}
	        	
	        	if(!px1done) {
	        		yy1 = xx1*yy1;
	        		yy1 += yy1;
	        		yy1 += y;
	        		xx1 = xxXxCache1 - yyYyCache1 + x1;
	        		xxXxCache1 = xx1*xx1;
	        		yyYyCache1 = yy1*yy1;
	        		iter1++;
	        		px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
//	        		if(index1 < index1bound && px1done)tmp[index1] = precomputedColors[iter1]; 
	        	}
	        	else {
//	        		if(index1 < index1bound) {pictureBuffer[index1] = precomputedColors[iter1];/*px1done = false;*/}
	        		if(index1 < index1bound) {tmp[index1] = precomputedColors[iter1];/*px1done = false;*/}
	        		index1 += 4;
	        		x1 += deltaXx4;
//	        		x1 += deltaX;x1 += deltaX;x1 += deltaX;x1 += deltaX;
	        		xx1 = 0.0f;
	        		yy1 = 0.0f;
	        		iter1 = 0;
	        		xxXxCache1 = 0f;
	        		yyYyCache1 = 0f;
	        		px1done = false;
	        	}
	        	
	        	if(!px2done) {
	        		yy2 = xx2*yy2;
	        		yy2 += yy2;
	        		yy2 += y;
	        		xx2 = xxXxCache2 - yyYyCache2 + x2;
	        		xxXxCache2 = xx2*xx2;
	        		yyYyCache2 = yy2*yy2;
	        		iter2++;
	        		px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
//	        		if(index2 < index2bound && px2done)tmp[index2] = precomputedColors[iter2]; 
	        	}
	        	else {
//	        		if(index2 < index2bound) {pictureBuffer[index2] = precomputedColors[iter2];/*px2done = false;*/}
	        		if(index2 < index2bound) {tmp[index2] = precomputedColors[iter2];/*px2done = false;*/}
	        		index2 += 4;
	        		x2 += deltaXx4;
//	        		x2 += deltaX;x2 += deltaX;x2 += deltaX;x2 += deltaX;
	        		xx2 = 0.0f;
	        		yy2 = 0.0f;
	        		iter2 = 0;
	        		xxXxCache2 = 0f;
	        		yyYyCache2 = 0f;
	        		px2done = false;
	        	}
	        	
	        	if(!px3done) {
	        		yy3 = xx3*yy3;
	        		yy3 += yy3;
	        		yy3 += y;
	        		xx3 = xxXxCache3 - yyYyCache3 + x3;
	        		xxXxCache3 = xx3*xx3;
	        		yyYyCache3 = yy3*yy3;
	        		iter3++;
	        		px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
//	        		if(index3 < index3bound && px3done)tmp[index3] = precomputedColors[iter3]; 
	        	}
	        	else {
//	        		if(index3 < index3bound) {pictureBuffer[index3] = precomputedColors[iter3];/*px3done = false;*/}
	        		if(index3 < index3bound) {tmp[index3] = precomputedColors[iter3];/*px3done = false;*/}
	        		index3 += 4;
	        		x3 += deltaXx4;
//	        		x3 += deltaX;x3 += deltaX;x3 += deltaX;x3 += deltaX;
	        		xx3 = 0.0f;
	        		yy3 = 0.0f;
	        		iter3 = 0;
	        		xxXxCache3 = 0f;
	        		yyYyCache3 = 0f;
	        		px3done = false;
	        	}

	        }
	        
	        index += pictureWidth;
		}		
	}
	
	private void updateMandelbrotImageCGRA_4_ifelse_v2() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		int tmp[] = pictureBuffer; //new int[pictureWidth*pictureHeight];
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			
			//manual unrolling
			int index0bound = index + pictureWidth - 3;
			int index1bound = index + pictureWidth - 2;
			int index2bound = index + pictureWidth - 1;
			int index3bound = index + pictureWidth - 0;
			//float deltaXx4 = (deltaX + deltaX + deltaX + deltaX);
			float deltaXx4 = deltaX; deltaXx4 += deltaX; deltaXx4 += deltaX; deltaXx4 += deltaX; 
			
			boolean px0done = false;
			boolean px1done = false;
			boolean px2done = false;
			boolean px3done = false;
			
			int index0 = index;
			int index1 = index+1;
			int index2 = index+2;
			int index3 = index+3;
			
			float x0 = x;
			float x1 = x0 + deltaX;
			float x2 = x1 + deltaX;
			float x3 = x2 + deltaX;

			float xx0 = 0.0f;
			float xx1 = 0.0f;
			float xx2 = 0.0f;
			float xx3 = 0.0f;
			
			float yy0 = 0.0f;
			float yy1 = 0.0f;
			float yy2 = 0.0f;
			float yy3 = 0.0f;
			
			int iter0 = 0;
			int iter1 = 0;
			int iter2 = 0;
			int iter3 = 0;
			
	        float xxXxCache0 = 0f;
	        float xxXxCache1 = 0f;
	        float xxXxCache2 = 0f;
	        float xxXxCache3 = 0f;
	        
	        float yyYyCache0 = 0f;
	        float yyYyCache1 = 0f;
	        float yyYyCache2 = 0f;
	        float yyYyCache3 = 0f;
		              
	        while ((index0 < index0bound) || (index1 < index1bound) || (index2 < index2bound) || (index3 < index3bound)) {
	        	
	        	if(!px0done){
	        		yy0 = xx0*yy0;
	        		yy0 += yy0;
	        		yy0 += y;
	        		xx0 = xxXxCache0 - yyYyCache0 + x0;
	        		xxXxCache0 = xx0*xx0;
	        		yyYyCache0 = yy0*yy0;
	        		iter0++;
	        		px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
	        		if(index0 < index0bound && px0done) {
	        			tmp[index0] = precomputedColors[iter0];
		        		index0 += 4;
		        		x0 += deltaXx4;
	//	        		x0 += deltaX;x0 += deltaX;x0 += deltaX;x0 += deltaX;
		        		xx0 = 0.0f;
		        		yy0 = 0.0f;
		        		iter0 = 0;
		        		xxXxCache0 = 0f;
		        		yyYyCache0 = 0f;
		        		px0done = false;
	        		}
	        	}
	        	
	        	if(!px1done) {
	        		yy1 = xx1*yy1;
	        		yy1 += yy1;
	        		yy1 += y;
	        		xx1 = xxXxCache1 - yyYyCache1 + x1;
	        		xxXxCache1 = xx1*xx1;
	        		yyYyCache1 = yy1*yy1;
	        		iter1++;
	        		px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
	        		if(index1 < index1bound && px1done){
	        			tmp[index1] = precomputedColors[iter1]; 
		        		index1 += 4;
		        		x1 += deltaXx4;
	//	        		x1 += deltaX;x1 += deltaX;x1 += deltaX;x1 += deltaX;
		        		xx1 = 0.0f;
		        		yy1 = 0.0f;
		        		iter1 = 0;
		        		xxXxCache1 = 0f;
		        		yyYyCache1 = 0f;
		        		px1done = false;
		        	}
	        	}
	        	
	        	if(!px2done) {
	        		yy2 = xx2*yy2;
	        		yy2 += yy2;
	        		yy2 += y;
	        		xx2 = xxXxCache2 - yyYyCache2 + x2;
	        		xxXxCache2 = xx2*xx2;
	        		yyYyCache2 = yy2*yy2;
	        		iter2++;
	        		px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
	        		if(index2 < index2bound && px2done){
	        			tmp[index2] = precomputedColors[iter2]; 
		        		index2 += 4;
		        		x2 += deltaXx4;
	//	        		x2 += deltaX;x2 += deltaX;x2 += deltaX;x2 += deltaX;
		        		xx2 = 0.0f;
		        		yy2 = 0.0f;
		        		iter2 = 0;
		        		xxXxCache2 = 0f;
		        		yyYyCache2 = 0f;
		        		px2done = false;
	        		}
	        	}
	        	
	        	if(!px3done) {
	        		yy3 = xx3*yy3;
	        		yy3 += yy3;
	        		yy3 += y;
	        		xx3 = xxXxCache3 - yyYyCache3 + x3;
	        		xxXxCache3 = xx3*xx3;
	        		yyYyCache3 = yy3*yy3;
	        		iter3++;
	        		px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
	        		if(index3 < index3bound && px3done) {
	        			tmp[index3] = precomputedColors[iter3]; 
		        		index3 += 4;
		        		x3 += deltaXx4;
	//	        		x3 += deltaX;x3 += deltaX;x3 += deltaX;x3 += deltaX;
		        		xx3 = 0.0f;
		        		yy3 = 0.0f;
		        		iter3 = 0;
		        		xxXxCache3 = 0f;
		        		yyYyCache3 = 0f;
		        		px3done = false;
	        		}
	        	}

	        }
	        
	        index += pictureWidth;
		}		
	}
	
	private void updateMandelbrotImageCGRA_5() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done)) {
		        	yy0 = xx0*yy0;
		        	yy1 = xx1*yy1;
		        	yy2 = xx2*yy2;
		        	yy3 = xx3*yy3;
		        	yy4 = xx4*yy4;

				    yy0 += yy0;
				    yy1 += yy1;
				    yy2 += yy2;
				    yy3 += yy3;
				    yy4 += yy4;
				    
				    yy0 += y;
				    yy1 += y;
				    yy2 += y;
				    yy3 += y;
				    yy4 += y;

				    xx0 = xxXxCache0 - yyYyCache0 + x0;
				    xx1 = xxXxCache1 - yyYyCache1 + x1;
				    xx2 = xxXxCache2 - yyYyCache2 + x2;
				    xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xx4 = xxXxCache4 - yyYyCache4 + x4;
							
				    xxXxCache0 = xx0*xx0;
				    xxXxCache1 = xx1*xx1;
				    xxXxCache2 = xx2*xx2;
				    xxXxCache3 = xx3*xx3;
				    xxXxCache4 = xx4*xx4;
				    
				    yyYyCache0 = yy0*yy0;
				    yyYyCache1 = yy1*yy1;
				    yyYyCache2 = yy2*yy2;
				    yyYyCache3 = yy3*yy3;
				    yyYyCache4 = yy4*yy4;
				    
				    if(!px0done) iter0++;
				    if(!px1done) iter1++;
				    if(!px2done) iter2++;
				    if(!px3done) iter3++;
				    if(!px4done) iter4++;
					
					px0done = px0done || !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
					px1done = px1done || !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
					px2done = px2done || !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
					px3done = px3done || !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
					px4done = px4done || !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    
			    x = x4 + deltaX;
			    pX = pX + 5;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_5_if() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done)) {
		        	if(!px0done){
		        		yy0 = xx0*yy0;
		        		yy0 += yy0;
		        		yy0 += y;
		        		xx0 = xxXxCache0 - yyYyCache0 + x0;
		        		xxXxCache0 = xx0*xx0;
		        		yyYyCache0 = yy0*yy0;
		        		iter0++;
		        		px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
		        	}

		        	if(!px1done) {
		        		yy1 = xx1*yy1;
		        		yy1 += yy1;
		        		yy1 += y;
		        		xx1 = xxXxCache1 - yyYyCache1 + x1;
		        		xxXxCache1 = xx1*xx1;
		        		yyYyCache1 = yy1*yy1;
		        		iter1++;
		        		px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
		        	}
		        	
		        	if(!px2done) {
		        		yy2 = xx2*yy2;
		        		yy2 += yy2;
		        		yy2 += y;
		        		xx2 = xxXxCache2 - yyYyCache2 + x2;
		        		xxXxCache2 = xx2*xx2;
		        		yyYyCache2 = yy2*yy2;
		        		iter2++;
		        		px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
		        	}
		        	
		        	if(!px3done) {
		        		yy3 = xx3*yy3;
		        		yy3 += yy3;
		        		yy3 += y;
		        		xx3 = xxXxCache3 - yyYyCache3 + x3;
		        		xxXxCache3 = xx3*xx3;
		        		yyYyCache3 = yy3*yy3;
		        		iter3++;
		        		px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
		        	}
		        	
		        	if(!px4done){
		        		yy4 = xx4*yy4;
		        		yy4 += yy4;
		        		yy4 += y;
		        		xx4 = xxXxCache4 - yyYyCache4 + x4;
		        		xxXxCache4 = xx4*xx4;
		        		yyYyCache4 = yy4*yy4;
		        		iter4++;
		        		px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);
		        	}
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    
			    x = x4 + deltaX;
			    pX = pX + 5;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_5_v2() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
					
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    
			    x = x4 + deltaX;
			    pX = pX + 5;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_8() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done)) {
		        	yy0 = xx0*yy0;
		        	yy1 = xx1*yy1;
		        	yy2 = xx2*yy2;
		        	yy3 = xx3*yy3;
		        	yy4 = xx4*yy4;
		        	yy5 = xx5*yy5;
		        	yy6 = xx6*yy6;
		        	yy7 = xx7*yy7;

				    yy0 += yy0;
				    yy1 += yy1;
				    yy2 += yy2;
				    yy3 += yy3;
				    yy4 += yy4;
				    yy5 += yy5;
				    yy6 += yy6;
				    yy7 += yy7;
				    
				    yy0 += y;
				    yy1 += y;
				    yy2 += y;
				    yy3 += y;
				    yy4 += y;
				    yy5 += y;
				    yy6 += y;
				    yy7 += y;

				    xx0 = xxXxCache0 - yyYyCache0 + x0;
				    xx1 = xxXxCache1 - yyYyCache1 + x1;
				    xx2 = xxXxCache2 - yyYyCache2 + x2;
				    xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xx5 = xxXxCache5 - yyYyCache5 + x5;
				    xx6 = xxXxCache6 - yyYyCache6 + x6;
				    xx7 = xxXxCache7 - yyYyCache7 + x7;
							
				    xxXxCache0 = xx0*xx0;
				    xxXxCache1 = xx1*xx1;
				    xxXxCache2 = xx2*xx2;
				    xxXxCache3 = xx3*xx3;
				    xxXxCache4 = xx4*xx4;
				    xxXxCache5 = xx5*xx5;
				    xxXxCache6 = xx6*xx6;
				    xxXxCache7 = xx7*xx7;
				    
				    yyYyCache0 = yy0*yy0;
				    yyYyCache1 = yy1*yy1;
				    yyYyCache2 = yy2*yy2;
				    yyYyCache3 = yy3*yy3;
				    yyYyCache4 = yy4*yy4;
				    yyYyCache5 = yy5*yy5;
				    yyYyCache6 = yy6*yy6;
				    yyYyCache7 = yy7*yy7;
				    
				    if(!px0done) iter0++;
				    if(!px1done) iter1++;
				    if(!px2done) iter2++;
				    if(!px3done) iter3++;
				    if(!px4done) iter4++;
				    if(!px5done) iter5++;
				    if(!px6done) iter6++;
				    if(!px7done) iter7++;
					
					px0done = px0done || !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
					px1done = px1done || !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
					px2done = px2done || !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
					px3done = px3done || !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
					px4done = px4done || !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);
					px5done = px5done || !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);
					px6done = px6done || !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);
					px7done = px7done || !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    
			    x = x7 + deltaX;
			    pX = pX + 8;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_8_if() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done)) {
		        	if(!px0done){
		        		yy0 = xx0*yy0;
		        		yy0 += yy0;
		        		yy0 += y;
		        		xx0 = xxXxCache0 - yyYyCache0 + x0;
		        		xxXxCache0 = xx0*xx0;
		        		yyYyCache0 = yy0*yy0;
		        		iter0++;
		        		px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
		        	}

		        	if(!px1done) {
		        		yy1 = xx1*yy1;
		        		yy1 += yy1;
		        		yy1 += y;
		        		xx1 = xxXxCache1 - yyYyCache1 + x1;
		        		xxXxCache1 = xx1*xx1;
		        		yyYyCache1 = yy1*yy1;
		        		iter1++;
		        		px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
		        	}
		        	
		        	if(!px2done) {
		        		yy2 = xx2*yy2;
		        		yy2 += yy2;
		        		yy2 += y;
		        		xx2 = xxXxCache2 - yyYyCache2 + x2;
		        		xxXxCache2 = xx2*xx2;
		        		yyYyCache2 = yy2*yy2;
		        		iter2++;
		        		px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
		        	}
		        	
		        	if(!px3done) {
		        		yy3 = xx3*yy3;
		        		yy3 += yy3;
		        		yy3 += y;
		        		xx3 = xxXxCache3 - yyYyCache3 + x3;
		        		xxXxCache3 = xx3*xx3;
		        		yyYyCache3 = yy3*yy3;
		        		iter3++;
		        		px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
		        	}
		        	
		        	if(!px4done){
		        		yy4 = xx4*yy4;
		        		yy4 += yy4;
		        		yy4 += y;
		        		xx4 = xxXxCache4 - yyYyCache4 + x4;
		        		xxXxCache4 = xx4*xx4;
		        		yyYyCache4 = yy4*yy4;
		        		iter4++;
		        		px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);
		        	}

		        	if(!px5done) {
		        		yy5 = xx5*yy5;
		        		yy5 += yy5;
		        		yy5 += y;
		        		xx5 = xxXxCache5 - yyYyCache5 + x5;
		        		xxXxCache5 = xx5*xx5;
		        		yyYyCache5 = yy5*yy5;
		        		iter5++;
		        		px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);
		        	}
		        	
		        	if(!px6done) {
		        		yy6 = xx6*yy6;
		        		yy6 += yy6;
		        		yy6 += y;
		        		xx6 = xxXxCache6 - yyYyCache6 + x6;
		        		xxXxCache6 = xx6*xx6;
		        		yyYyCache6 = yy6*yy6;
		        		iter6++;
		        		px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);
		        	}
		        	
		        	if(!px7done) {
		        		yy7 = xx7*yy7;
		        		yy7 += yy7;
		        		yy7 += y;
		        		xx7 = xxXxCache7 - yyYyCache7 + x7;
		        		xxXxCache7 = xx7*xx7;
		        		yyYyCache7 = yy7*yy7;
		        		iter7++;
		        		px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);
		        	} 
				 
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    
			    x = x7 + deltaX;
			    pX = pX + 8;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_8_v2() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    
			    x = x7 + deltaX;
			    pX = pX + 8;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_8_v3() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done) && !(px4done && px5done && px6done && px7done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
		        }
		        
		        while (!(px0done && px1done && px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}	
		        }
		        
		        while (!(px4done && px5done && px6done && px7done)) {
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    
			    x = x7 + deltaX;
			    pX = pX + 8;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_16_v2() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done && 
		        		 px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 

		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    
			    x = x15 + deltaX;
			    pX = pX + 16;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_16_v3() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done) && 
		        	   !(px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 

		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
		        }
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
		        while (!(px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			    }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    
			    x = x15 + deltaX;
			    pX = pX + 16;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_16_v4() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done) && !(px4done && px5done && px6done && px7done) && 
		        	   !(px8done && px9done && px10done && px11done) && !(px12done && px13done && px14done && px15done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 

		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
		        }
		        
		        while (!(px0done && px1done && px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
			    }
		        
		        while (!(px4done && px5done && px6done && px7done)) {				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
		        while (!(px8done && px9done && px10done && px11done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
			    }
		        
		        while (!(px12done && px13done && px14done && px15done)) {
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			    }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    
			    x = x15 + deltaX;
			    pX = pX + 16;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_16_v5() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done) && 
		        	   !(px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 

		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
		        }
		        
		        while (!(px0done && px1done && px2done && px3done) && !(px4done && px5done && px6done && px7done)) {
			        	yy0 = xx0*yy0;
			        	yy0 += yy0;
			        	yy0 += y;
			        	xx0 = xxXxCache0 - yyYyCache0 + x0;
			        	xxXxCache0 = xx0*xx0;
			        	yyYyCache0 = yy0*yy0;
			        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
			        	
			        	yy1 = xx1*yy1;
			        	yy1 += yy1;
			        	yy1 += y;
			        	xx1 = xxXxCache1 - yyYyCache1 + x1;
			        	xxXxCache1 = xx1*xx1;
			        	yyYyCache1 = yy1*yy1;
			        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
			        	
			        	yy2 = xx2*yy2;
			        	yy2 += yy2;
			        	yy2 += y;
			        	xx2 = xxXxCache2 - yyYyCache2 + x2;
			        	xxXxCache2 = xx2*xx2;
			        	yyYyCache2 = yy2*yy2;
			        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
			        	
			        	yy3 = xx3*yy3;
			        	yy3 += yy3;
			        	yy3 += y;
			        	xx3 = xxXxCache3 - yyYyCache3 + x3;
					    xxXxCache3 = xx3*xx3;
					    yyYyCache3 = yy3*yy3;
					    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
					    
			        	yy4 = xx4*yy4;
			        	yy4 += yy4;
			        	yy4 += y;
			        	xx4 = xxXxCache4 - yyYyCache4 + x4;
					    xxXxCache4 = xx4*xx4;
					    yyYyCache4 = yy4*yy4;
					    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
					    
		        		yy5 = xx5*yy5;
		        		yy5 += yy5;
		        		yy5 += y;
		        		xx5 = xxXxCache5 - yyYyCache5 + x5;
		        		xxXxCache5 = xx5*xx5;
		        		yyYyCache5 = yy5*yy5;
		        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
		        	
		        		yy6 = xx6*yy6;
		        		yy6 += yy6;
		        		yy6 += y;
		        		xx6 = xxXxCache6 - yyYyCache6 + x6;
		        		xxXxCache6 = xx6*xx6;
		        		yyYyCache6 = yy6*yy6;
		        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
		        	
		        		yy7 = xx7*yy7;
		        		yy7 += yy7;
		        		yy7 += y;
		        		xx7 = xxXxCache7 - yyYyCache7 + x7;
		        		xxXxCache7 = xx7*xx7;
		        		yyYyCache7 = yy7*yy7;
		        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
		        while (!(px8done && px9done && px10done && px11done) && !(px12done && px13done && px14done && px15done)) {
			        	yy8 = xx8*yy8;
			        	yy8 += yy8;
			        	yy8 += y;
			        	xx8 = xxXxCache8 - yyYyCache8 + x8;
			        	xxXxCache8 = xx8*xx8;
			        	yyYyCache8 = yy8*yy8;
			        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
			        	
			        	yy9 = xx9*yy9;
			        	yy9 += yy9;
			        	yy9 += y;
			        	xx9 = xxXxCache9 - yyYyCache9 + x9;
			        	xxXxCache9 = xx9*xx9;
			        	yyYyCache9 = yy9*yy9;
			        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
			        	
			        	yy10 = xx10*yy10;
			        	yy10 += yy10;
			        	yy10 += y;
			        	xx10 = xxXxCache10 - yyYyCache10 + x10;
			        	xxXxCache10 = xx10*xx10;
			        	yyYyCache10 = yy10*yy10;
			        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
			        	
			        	yy11 = xx11*yy11;
			        	yy11 += yy11;
			        	yy11 += y;
			        	xx11 = xxXxCache11 - yyYyCache11 + x11;
					    xxXxCache11 = xx11*xx11;
					    yyYyCache11 = yy11*yy11;
					    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
					    
			        	yy12 = xx12*yy12;
			        	yy12 += yy12;
			        	yy12 += y;
			        	xx12 = xxXxCache12 - yyYyCache12 + x12;
					    xxXxCache12 = xx12*xx12;
					    yyYyCache12 = yy12*yy12;
					    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
					    
		        		yy13 = xx13*yy13;
		        		yy13 += yy13;
		        		yy13 += y;
		        		xx13 = xxXxCache13 - yyYyCache13 + x13;
		        		xxXxCache13 = xx13*xx13;
		        		yyYyCache13 = yy13*yy13;
		        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
		        	
		        		yy14 = xx14*yy14;
		        		yy14 += yy14;
		        		yy14 += y;
		        		xx14 = xxXxCache14 - yyYyCache14 + x14;
		        		xxXxCache14 = xx14*xx14;
		        		yyYyCache14 = yy14*yy14;
		        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
		        	
		        		yy15 = xx15*yy15;
		        		yy15 += yy15;
		        		yy15 += y;
		        		xx15 = xxXxCache15 - yyYyCache15 + x15;
		        		xxXxCache15 = xx15*xx15;
		        		yyYyCache15 = yy15*yy15;
		        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			        }
		        
		        while (!(px0done && px1done && px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
			    }
		        
		        while (!(px4done && px5done && px6done && px7done)) {				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
		        while (!(px8done && px9done && px10done && px11done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
			    }
		        
		        while (!(px12done && px13done && px14done && px15done)) {
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			    }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    
			    x = x15 + deltaX;
			    pX = pX + 16;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_16_v6() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done) && 
		        	   !(px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 

		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
		        }
		        
		        while (!(px0done && px1done && px2done && px3done) && !(px4done && px5done && px6done && px7done)) {
			        	yy0 = xx0*yy0;
			        	yy0 += yy0;
			        	yy0 += y;
			        	xx0 = xxXxCache0 - yyYyCache0 + x0;
			        	xxXxCache0 = xx0*xx0;
			        	yyYyCache0 = yy0*yy0;
			        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
			        	
			        	yy1 = xx1*yy1;
			        	yy1 += yy1;
			        	yy1 += y;
			        	xx1 = xxXxCache1 - yyYyCache1 + x1;
			        	xxXxCache1 = xx1*xx1;
			        	yyYyCache1 = yy1*yy1;
			        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
			        	
			        	yy2 = xx2*yy2;
			        	yy2 += yy2;
			        	yy2 += y;
			        	xx2 = xxXxCache2 - yyYyCache2 + x2;
			        	xxXxCache2 = xx2*xx2;
			        	yyYyCache2 = yy2*yy2;
			        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
			        	
			        	yy3 = xx3*yy3;
			        	yy3 += yy3;
			        	yy3 += y;
			        	xx3 = xxXxCache3 - yyYyCache3 + x3;
					    xxXxCache3 = xx3*xx3;
					    yyYyCache3 = yy3*yy3;
					    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
					    
			        	yy4 = xx4*yy4;
			        	yy4 += yy4;
			        	yy4 += y;
			        	xx4 = xxXxCache4 - yyYyCache4 + x4;
					    xxXxCache4 = xx4*xx4;
					    yyYyCache4 = yy4*yy4;
					    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
					    
		        		yy5 = xx5*yy5;
		        		yy5 += yy5;
		        		yy5 += y;
		        		xx5 = xxXxCache5 - yyYyCache5 + x5;
		        		xxXxCache5 = xx5*xx5;
		        		yyYyCache5 = yy5*yy5;
		        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
		        	
		        		yy6 = xx6*yy6;
		        		yy6 += yy6;
		        		yy6 += y;
		        		xx6 = xxXxCache6 - yyYyCache6 + x6;
		        		xxXxCache6 = xx6*xx6;
		        		yyYyCache6 = yy6*yy6;
		        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
		        	
		        		yy7 = xx7*yy7;
		        		yy7 += yy7;
		        		yy7 += y;
		        		xx7 = xxXxCache7 - yyYyCache7 + x7;
		        		xxXxCache7 = xx7*xx7;
		        		yyYyCache7 = yy7*yy7;
		        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
		        while (!(px8done && px9done && px10done && px11done) && !(px12done && px13done && px14done && px15done)) {
			        	yy8 = xx8*yy8;
			        	yy8 += yy8;
			        	yy8 += y;
			        	xx8 = xxXxCache8 - yyYyCache8 + x8;
			        	xxXxCache8 = xx8*xx8;
			        	yyYyCache8 = yy8*yy8;
			        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
			        	
			        	yy9 = xx9*yy9;
			        	yy9 += yy9;
			        	yy9 += y;
			        	xx9 = xxXxCache9 - yyYyCache9 + x9;
			        	xxXxCache9 = xx9*xx9;
			        	yyYyCache9 = yy9*yy9;
			        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
			        	
			        	yy10 = xx10*yy10;
			        	yy10 += yy10;
			        	yy10 += y;
			        	xx10 = xxXxCache10 - yyYyCache10 + x10;
			        	xxXxCache10 = xx10*xx10;
			        	yyYyCache10 = yy10*yy10;
			        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
			        	
			        	yy11 = xx11*yy11;
			        	yy11 += yy11;
			        	yy11 += y;
			        	xx11 = xxXxCache11 - yyYyCache11 + x11;
					    xxXxCache11 = xx11*xx11;
					    yyYyCache11 = yy11*yy11;
					    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
					    
			        	yy12 = xx12*yy12;
			        	yy12 += yy12;
			        	yy12 += y;
			        	xx12 = xxXxCache12 - yyYyCache12 + x12;
					    xxXxCache12 = xx12*xx12;
					    yyYyCache12 = yy12*yy12;
					    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
					    
		        		yy13 = xx13*yy13;
		        		yy13 += yy13;
		        		yy13 += y;
		        		xx13 = xxXxCache13 - yyYyCache13 + x13;
		        		xxXxCache13 = xx13*xx13;
		        		yyYyCache13 = yy13*yy13;
		        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
		        	
		        		yy14 = xx14*yy14;
		        		yy14 += yy14;
		        		yy14 += y;
		        		xx14 = xxXxCache14 - yyYyCache14 + x14;
		        		xxXxCache14 = xx14*xx14;
		        		yyYyCache14 = yy14*yy14;
		        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
		        	
		        		yy15 = xx15*yy15;
		        		yy15 += yy15;
		        		yy15 += y;
		        		xx15 = xxXxCache15 - yyYyCache15 + x15;
		        		xxXxCache15 = xx15*xx15;
		        		yyYyCache15 = yy15*yy15;
		        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			        }
		        
		        while (!(px0done && px1done) && !(px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
			    }
		        
		        while (!(px4done && px5done) && !(px6done && px7done)) {				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
		        while (!(px8done && px9done) && !(px10done && px11done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
			    }
		        
		        while (!(px12done && px13done) && !(px14done && px15done)) {
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			    }
		        
		        while (!(px0done && px1done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
			    }
		        
		        while (!(px2done && px3done)) {
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
			    }
		        
		        while (!(px4done && px5done)) {				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
			    }
		        
		        while (!(px6done && px7done)) {	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
		        while (!(px8done && px9done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
			    }
		        
		        while (!(px10done && px11done)) {		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
			    }
		        
		        while (!(px12done && px13done)) {
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
			    }
		        
		        while (!(px14done && px15done)) {	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			    }
		        

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    
			    x = x15 + deltaX;
			    pX = pX + 16;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_16() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		  
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done && 
		        		 px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done)) {
		           	yy0 = xx0*yy0;
		        	yy1 = xx1*yy1;
		        	yy2 = xx2*yy2;
		        	yy3 = xx3*yy3;
		        	yy4 = xx4*yy4;
		        	yy5 = xx5*yy5;
		        	yy6 = xx6*yy6;
		        	yy7 = xx7*yy7;
		           	yy8 = xx8*yy8;
		        	yy9 = xx9*yy9;
		        	yy10 = xx10*yy10;
		        	yy11 = xx11*yy11;
		        	yy12 = xx12*yy12;
		        	yy13 = xx13*yy13;
		        	yy14 = xx14*yy14;
		        	yy15 = xx15*yy15;

				    yy0 += yy0;
				    yy1 += yy1;
				    yy2 += yy2;
				    yy3 += yy3;
				    yy4 += yy4;
				    yy5 += yy5;
				    yy6 += yy6;
				    yy7 += yy7;
				    yy8 += yy8;
				    yy9 += yy9;
				    yy10 += yy10;
				    yy11 += yy11;
				    yy12 += yy12;
				    yy13 += yy13;
				    yy14 += yy14;
				    yy15 += yy15;
				    
				    yy0 += y;
				    yy1 += y;
				    yy2 += y;
				    yy3 += y;
				    yy4 += y;
				    yy5 += y;
				    yy6 += y;
				    yy7 += y;
				    yy8 += y;
				    yy9 += y;
				    yy10 += y;
				    yy11 += y;
				    yy12 += y;
				    yy13 += y;
				    yy14 += y;
				    yy15 += y;

				    xx0 = xxXxCache0 - yyYyCache0 + x0;
				    xx1 = xxXxCache1 - yyYyCache1 + x1;
				    xx2 = xxXxCache2 - yyYyCache2 + x2;
				    xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xx5 = xxXxCache5 - yyYyCache5 + x5;
				    xx6 = xxXxCache6 - yyYyCache6 + x6;
				    xx7 = xxXxCache7 - yyYyCache7 + x7;
				    xx8 = xxXxCache8 - yyYyCache8 + x8;
				    xx9 = xxXxCache9 - yyYyCache9 + x9;
				    xx10 = xxXxCache10 - yyYyCache10 + x10;
				    xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xx13 = xxXxCache13 - yyYyCache13 + x13;
				    xx14 = xxXxCache14 - yyYyCache14 + x14;
				    xx15 = xxXxCache15 - yyYyCache15 + x15;
							
				    xxXxCache0 = xx0*xx0;
				    xxXxCache1 = xx1*xx1;
				    xxXxCache2 = xx2*xx2;
				    xxXxCache3 = xx3*xx3;
				    xxXxCache4 = xx4*xx4;
				    xxXxCache5 = xx5*xx5;
				    xxXxCache6 = xx6*xx6;
				    xxXxCache7 = xx7*xx7;
				    xxXxCache8 = xx8*xx8;
				    xxXxCache9 = xx9*xx9;
				    xxXxCache10 = xx10*xx10;
				    xxXxCache11 = xx11*xx11;
				    xxXxCache12 = xx12*xx12;
				    xxXxCache13 = xx13*xx13;
				    xxXxCache14 = xx14*xx14;
				    xxXxCache15 = xx15*xx15;

				    yyYyCache0 = yy0*yy0;
				    yyYyCache1 = yy1*yy1;
				    yyYyCache2 = yy2*yy2;
				    yyYyCache3 = yy3*yy3;
				    yyYyCache4 = yy4*yy4;
				    yyYyCache5 = yy5*yy5;
				    yyYyCache6 = yy6*yy6;
				    yyYyCache7 = yy7*yy7;
				    yyYyCache8 = yy8*yy8;
				    yyYyCache9 = yy9*yy9;
				    yyYyCache10 = yy10*yy10;
				    yyYyCache11 = yy11*yy11;
				    yyYyCache12 = yy12*yy12;
				    yyYyCache13 = yy13*yy13;
				    yyYyCache14 = yy14*yy14;
				    yyYyCache15 = yy15*yy15;
				    
				    if(!px0done) iter0++;
				    if(!px1done) iter1++;
				    if(!px2done) iter2++;
				    if(!px3done) iter3++;
				    if(!px4done) iter4++;
				    if(!px5done) iter5++;
				    if(!px6done) iter6++;
				    if(!px7done) iter7++;
				    if(!px8done) iter8++;
				    if(!px9done) iter9++;
				    if(!px10done) iter10++;
				    if(!px11done) iter11++;
				    if(!px12done) iter12++;
				    if(!px13done) iter13++;
				    if(!px14done) iter14++;
				    if(!px15done) iter15++;
					
					px0done = px0done || !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
					px1done = px1done || !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
					px2done = px2done || !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
					px3done = px3done || !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
					px4done = px4done || !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);
					px5done = px5done || !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);
					px6done = px6done || !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);
					px7done = px7done || !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);
					px8done = px8done || !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);
					px9done = px9done || !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);
					px10done = px10done || !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);
					px11done = px11done || !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);
					px12done = px12done || !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);
					px13done = px13done || !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);
					px14done = px14done || !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);
					px15done = px15done || !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);

		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    
			    x = x15 + deltaX;
			    pX = pX + 16;
			}
		}		
	}
	
	
	private void updateMandelbrotImageCGRA_20() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;
				boolean px16done = false;
				boolean px17done = false;
				boolean px18done = false;
				boolean px19done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				int index16 = index++;
				int index17 = index++;
				int index18 = index++;
				int index19 = index++;

				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				float x16 = x15 + deltaX;
				float x17 = x16 + deltaX;
				float x18 = x17 + deltaX;
				float x19 = x18 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				float xx16 = 0.0f;
				float xx17 = 0.0f;
				float xx18 = 0.0f;
				float xx19 = 0.0f;

				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				float yy16 = 0.0f;
				float yy17 = 0.0f;
				float yy18 = 0.0f;
				float yy19 = 0.0f;

				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				int iter16 = 0;
				int iter17 = 0;
				int iter18 = 0;
				int iter19 = 0;
			
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		        float xxXxCache16 = 0f;
		        float xxXxCache17 = 0f;
		        float xxXxCache18 = 0f;
		        float xxXxCache19 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        float yyYyCache16 = 0f;
		        float yyYyCache17 = 0f;
		        float yyYyCache18 = 0f;
		        float yyYyCache19 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done && 
		        		 px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done &&
		        		 px16done && px17done && px18done && px19done)) {
		           	yy0 = xx0*yy0;
		        	yy1 = xx1*yy1;
		        	yy2 = xx2*yy2;
		        	yy3 = xx3*yy3;
		        	yy4 = xx4*yy4;
		        	yy5 = xx5*yy5;
		        	yy6 = xx6*yy6;
		        	yy7 = xx7*yy7;
		           	yy8 = xx8*yy8;
		        	yy9 = xx9*yy9;
		        	yy10 = xx10*yy10;
		        	yy11 = xx11*yy11;
		        	yy12 = xx12*yy12;
		        	yy13 = xx13*yy13;
		        	yy14 = xx14*yy14;
		        	yy15 = xx15*yy15;
		           	yy16 = xx16*yy16;
		        	yy17 = xx17*yy17;
		        	yy18 = xx18*yy18;
		        	yy19 = xx19*yy19;

				    yy0 += yy0;
				    yy1 += yy1;
				    yy2 += yy2;
				    yy3 += yy3;
				    yy4 += yy4;
				    yy5 += yy5;
				    yy6 += yy6;
				    yy7 += yy7;
				    yy8 += yy8;
				    yy9 += yy9;
				    yy10 += yy10;
				    yy11 += yy11;
				    yy12 += yy12;
				    yy13 += yy13;
				    yy14 += yy14;
				    yy15 += yy15;
				    yy16 += yy16;
				    yy17 += yy17;
				    yy18 += yy18;
				    yy19 += yy19;

				    yy0 += y;
				    yy1 += y;
				    yy2 += y;
				    yy3 += y;
				    yy4 += y;
				    yy5 += y;
				    yy6 += y;
				    yy7 += y;
				    yy8 += y;
				    yy9 += y;
				    yy10 += y;
				    yy11 += y;
				    yy12 += y;
				    yy13 += y;
				    yy14 += y;
				    yy15 += y;
				    yy16 += y;
				    yy17 += y;
				    yy18 += y;
				    yy19 += y;

				    xx0 = xxXxCache0 - yyYyCache0 + x0;
				    xx1 = xxXxCache1 - yyYyCache1 + x1;
				    xx2 = xxXxCache2 - yyYyCache2 + x2;
				    xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xx5 = xxXxCache5 - yyYyCache5 + x5;
				    xx6 = xxXxCache6 - yyYyCache6 + x6;
				    xx7 = xxXxCache7 - yyYyCache7 + x7;
				    xx8 = xxXxCache8 - yyYyCache8 + x8;
				    xx9 = xxXxCache9 - yyYyCache9 + x9;
				    xx10 = xxXxCache10 - yyYyCache10 + x10;
				    xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xx13 = xxXxCache13 - yyYyCache13 + x13;
				    xx14 = xxXxCache14 - yyYyCache14 + x14;
				    xx15 = xxXxCache15 - yyYyCache15 + x15;
				    xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xx17 = xxXxCache17 - yyYyCache17 + x17;
				    xx18 = xxXxCache18 - yyYyCache18 + x18;
				    xx19 = xxXxCache19 - yyYyCache19 + x19;
				    
				    xxXxCache0 = xx0*xx0;
				    xxXxCache1 = xx1*xx1;
				    xxXxCache2 = xx2*xx2;
				    xxXxCache3 = xx3*xx3;
				    xxXxCache4 = xx4*xx4;
				    xxXxCache5 = xx5*xx5;
				    xxXxCache6 = xx6*xx6;
				    xxXxCache7 = xx7*xx7;
				    xxXxCache8 = xx8*xx8;
				    xxXxCache9 = xx9*xx9;
				    xxXxCache10 = xx10*xx10;
				    xxXxCache11 = xx11*xx11;
				    xxXxCache12 = xx12*xx12;
				    xxXxCache13 = xx13*xx13;
				    xxXxCache14 = xx14*xx14;
				    xxXxCache15 = xx15*xx15;
				    xxXxCache16 = xx16*xx16;
				    xxXxCache17 = xx17*xx17;
				    xxXxCache18 = xx18*xx18;
				    xxXxCache19 = xx19*xx19;

				    yyYyCache0 = yy0*yy0;
				    yyYyCache1 = yy1*yy1;
				    yyYyCache2 = yy2*yy2;
				    yyYyCache3 = yy3*yy3;
				    yyYyCache4 = yy4*yy4;
				    yyYyCache5 = yy5*yy5;
				    yyYyCache6 = yy6*yy6;
				    yyYyCache7 = yy7*yy7;
				    yyYyCache8 = yy8*yy8;
				    yyYyCache9 = yy9*yy9;
				    yyYyCache10 = yy10*yy10;
				    yyYyCache11 = yy11*yy11;
				    yyYyCache12 = yy12*yy12;
				    yyYyCache13 = yy13*yy13;
				    yyYyCache14 = yy14*yy14;
				    yyYyCache15 = yy15*yy15;
				    yyYyCache16 = yy16*yy16;
				    yyYyCache17 = yy17*yy17;
				    yyYyCache18 = yy18*yy18;
				    yyYyCache19 = yy19*yy19;
				    
				    if(!px0done) iter0++;
				    if(!px1done) iter1++;
				    if(!px2done) iter2++;
				    if(!px3done) iter3++;
				    if(!px4done) iter4++;
				    if(!px5done) iter5++;
				    if(!px6done) iter6++;
				    if(!px7done) iter7++;
				    if(!px8done) iter8++;
				    if(!px9done) iter9++;
				    if(!px10done) iter10++;
				    if(!px11done) iter11++;
				    if(!px12done) iter12++;
				    if(!px13done) iter13++;
				    if(!px14done) iter14++;
				    if(!px15done) iter15++;
				    if(!px16done) iter16++;
				    if(!px17done) iter17++;
				    if(!px18done) iter18++;
				    if(!px19done) iter19++;
					
					px0done = px0done || !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
					px1done = px1done || !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
					px2done = px2done || !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
					px3done = px3done || !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
					px4done = px4done || !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);
					px5done = px5done || !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);
					px6done = px6done || !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);
					px7done = px7done || !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);
					px8done = px8done || !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);
					px9done = px9done || !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);
					px10done = px10done || !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);
					px11done = px11done || !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);
					px12done = px12done || !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);
					px13done = px13done || !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);
					px14done = px14done || !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);
					px15done = px15done || !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);
					px16done = px16done || !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);
					px17done = px17done || !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);
					px18done = px18done || !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);
					px19done = px19done || !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);
		        }

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    pictureBuffer[index16] = precomputedColors[iter16];
			    pictureBuffer[index17] = precomputedColors[iter17];
			    pictureBuffer[index18] = precomputedColors[iter18];
			    pictureBuffer[index19] = precomputedColors[iter19];
			    
			    x = x19 + deltaX;
			    pX = pX + 20;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_20_v2() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;
				boolean px16done = false;
				boolean px17done = false;
				boolean px18done = false;
				boolean px19done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				int index16 = index++;
				int index17 = index++;
				int index18 = index++;
				int index19 = index++;

				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				float x16 = x15 + deltaX;
				float x17 = x16 + deltaX;
				float x18 = x17 + deltaX;
				float x19 = x18 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				float xx16 = 0.0f;
				float xx17 = 0.0f;
				float xx18 = 0.0f;
				float xx19 = 0.0f;

				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				float yy16 = 0.0f;
				float yy17 = 0.0f;
				float yy18 = 0.0f;
				float yy19 = 0.0f;

				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				int iter16 = 0;
				int iter17 = 0;
				int iter18 = 0;
				int iter19 = 0;
			
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		        float xxXxCache16 = 0f;
		        float xxXxCache17 = 0f;
		        float xxXxCache18 = 0f;
		        float xxXxCache19 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        float yyYyCache16 = 0f;
		        float yyYyCache17 = 0f;
		        float yyYyCache18 = 0f;
		        float yyYyCache19 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done) && 
		        	   !(px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done) &&
		        	   !(px16done && px17done && px18done && px19done)) {
	        	
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 

		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
	        		
		        	yy16 = xx16*yy16;
		        	yy16 += yy16;
		        	yy16 += y;
		        	xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xxXxCache16 = xx16*xx16;
				    yyYyCache16 = yy16*yy16;
				    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
				    
	        		yy17 = xx17*yy17;
	        		yy17 += yy17;
	        		yy17 += y;
	        		xx17 = xxXxCache17 - yyYyCache17 + x17;
	        		xxXxCache17 = xx17*xx17;
	        		yyYyCache17 = yy17*yy17;
	        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
	        	
	        		yy18 = xx18*yy18;
	        		yy18 += yy18;
	        		yy18 += y;
	        		xx18 = xxXxCache18 - yyYyCache18 + x18;
	        		xxXxCache18 = xx18*xx18;
	        		yyYyCache18 = yy18*yy18;
	        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
	        	
	        		yy19 = xx19*yy19;
	        		yy19 += yy19;
	        		yy19 += y;
	        		xx19 = xxXxCache19 - yyYyCache19 + x19;
	        		xxXxCache19 = xx19*xx19;
	        		yyYyCache19 = yy19*yy19;
	        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
		        }
				        
		        while (!(px0done && px1done && px2done && px3done) && !(px4done && px5done && px6done && px7done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
		        while (!(px8done && px9done && px10done && px11done) && !(px12done && px13done && px14done && px15done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
		        }
				        
		        while (!(px0done && px1done && px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
			    }
				        
		        while (!(px4done && px5done && px6done && px7done)) {				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
				        
		        while (!(px8done && px9done && px10done && px11done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
			    }
				        
		        while (!(px12done && px13done && px14done && px15done)) {
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			    }
				        
		        while (!(px16done && px17done && px18done && px19done)) {
		        	yy16 = xx16*yy16;
		        	yy16 += yy16;
		        	yy16 += y;
		        	xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xxXxCache16 = xx16*xx16;
				    yyYyCache16 = yy16*yy16;
				    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
				    
	        		yy17 = xx17*yy17;
	        		yy17 += yy17;
	        		yy17 += y;
	        		xx17 = xxXxCache17 - yyYyCache17 + x17;
	        		xxXxCache17 = xx17*xx17;
	        		yyYyCache17 = yy17*yy17;
	        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
	        	
	        		yy18 = xx18*yy18;
	        		yy18 += yy18;
	        		yy18 += y;
	        		xx18 = xxXxCache18 - yyYyCache18 + x18;
	        		xxXxCache18 = xx18*xx18;
	        		yyYyCache18 = yy18*yy18;
	        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
	        	
	        		yy19 = xx19*yy19;
	        		yy19 += yy19;
	        		yy19 += y;
	        		xx19 = xxXxCache19 - yyYyCache19 + x19;
	        		xxXxCache19 = xx19*xx19;
	        		yyYyCache19 = yy19*yy19;
	        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
		        }
						        

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    pictureBuffer[index16] = precomputedColors[iter16];
			    pictureBuffer[index17] = precomputedColors[iter17];
			    pictureBuffer[index18] = precomputedColors[iter18];
			    pictureBuffer[index19] = precomputedColors[iter19];
			    
			    x = x19 + deltaX;
			    pX = pX + 20;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_20_v3() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;
				boolean px16done = false;
				boolean px17done = false;
				boolean px18done = false;
				boolean px19done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				int index16 = index++;
				int index17 = index++;
				int index18 = index++;
				int index19 = index++;

				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				float x16 = x15 + deltaX;
				float x17 = x16 + deltaX;
				float x18 = x17 + deltaX;
				float x19 = x18 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				float xx16 = 0.0f;
				float xx17 = 0.0f;
				float xx18 = 0.0f;
				float xx19 = 0.0f;

				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				float yy16 = 0.0f;
				float yy17 = 0.0f;
				float yy18 = 0.0f;
				float yy19 = 0.0f;

				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				int iter16 = 0;
				int iter17 = 0;
				int iter18 = 0;
				int iter19 = 0;
			
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		        float xxXxCache16 = 0f;
		        float xxXxCache17 = 0f;
		        float xxXxCache18 = 0f;
		        float xxXxCache19 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        float yyYyCache16 = 0f;
		        float yyYyCache17 = 0f;
		        float yyYyCache18 = 0f;
		        float yyYyCache19 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done) && !(px4done && px5done && px6done && px7done) && 
		        	   !(px8done && px9done && px10done && px11done) && !(px12done && px13done && px14done && px15done) &&
		        	   !(px16done && px17done && px18done && px19done)) {
	        	
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 

		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
	        		
		        	yy16 = xx16*yy16;
		        	yy16 += yy16;
		        	yy16 += y;
		        	xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xxXxCache16 = xx16*xx16;
				    yyYyCache16 = yy16*yy16;
				    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
				    
	        		yy17 = xx17*yy17;
	        		yy17 += yy17;
	        		yy17 += y;
	        		xx17 = xxXxCache17 - yyYyCache17 + x17;
	        		xxXxCache17 = xx17*xx17;
	        		yyYyCache17 = yy17*yy17;
	        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
	        	
	        		yy18 = xx18*yy18;
	        		yy18 += yy18;
	        		yy18 += y;
	        		xx18 = xxXxCache18 - yyYyCache18 + x18;
	        		xxXxCache18 = xx18*xx18;
	        		yyYyCache18 = yy18*yy18;
	        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
	        	
	        		yy19 = xx19*yy19;
	        		yy19 += yy19;
	        		yy19 += y;
	        		xx19 = xxXxCache19 - yyYyCache19 + x19;
	        		xxXxCache19 = xx19*xx19;
	        		yyYyCache19 = yy19*yy19;
	        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
		        }
		                
		        while (!(px0done && px1done && px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
			    }
				        
		        while (!(px4done && px5done && px6done && px7done)) {				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
				        
		        while (!(px8done && px9done && px10done && px11done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
			    }
				        
		        while (!(px12done && px13done && px14done && px15done)) {
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			    }
				        
		        while (!(px16done && px17done && px18done && px19done)) {
		        	yy16 = xx16*yy16;
		        	yy16 += yy16;
		        	yy16 += y;
		        	xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xxXxCache16 = xx16*xx16;
				    yyYyCache16 = yy16*yy16;
				    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
				    
	        		yy17 = xx17*yy17;
	        		yy17 += yy17;
	        		yy17 += y;
	        		xx17 = xxXxCache17 - yyYyCache17 + x17;
	        		xxXxCache17 = xx17*xx17;
	        		yyYyCache17 = yy17*yy17;
	        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
	        	
	        		yy18 = xx18*yy18;
	        		yy18 += yy18;
	        		yy18 += y;
	        		xx18 = xxXxCache18 - yyYyCache18 + x18;
	        		xxXxCache18 = xx18*xx18;
	        		yyYyCache18 = yy18*yy18;
	        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
	        	
	        		yy19 = xx19*yy19;
	        		yy19 += yy19;
	        		yy19 += y;
	        		xx19 = xxXxCache19 - yyYyCache19 + x19;
	        		xxXxCache19 = xx19*xx19;
	        		yyYyCache19 = yy19*yy19;
	        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
		        }
						        

			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    pictureBuffer[index16] = precomputedColors[iter16];
			    pictureBuffer[index17] = precomputedColors[iter17];
			    pictureBuffer[index18] = precomputedColors[iter18];
			    pictureBuffer[index19] = precomputedColors[iter19];
			    
			    x = x19 + deltaX;
			    pX = pX + 20;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_24() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;
				boolean px16done = false;
				boolean px17done = false;
				boolean px18done = false;
				boolean px19done = false;
				boolean px20done = false;
				boolean px21done = false;
				boolean px22done = false;
				boolean px23done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				int index16 = index++;
				int index17 = index++;
				int index18 = index++;
				int index19 = index++;
				int index20 = index++;
				int index21 = index++;
				int index22 = index++;
				int index23 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				float x16 = x15 + deltaX;
				float x17 = x16 + deltaX;
				float x18 = x17 + deltaX;
				float x19 = x18 + deltaX;
				float x20 = x19 + deltaX;
				float x21 = x20 + deltaX;
				float x22 = x21 + deltaX;
				float x23 = x22 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				float xx16 = 0.0f;
				float xx17 = 0.0f;
				float xx18 = 0.0f;
				float xx19 = 0.0f;
				float xx20 = 0.0f;
				float xx21 = 0.0f;
				float xx22 = 0.0f;
				float xx23 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				float yy16 = 0.0f;
				float yy17 = 0.0f;
				float yy18 = 0.0f;
				float yy19 = 0.0f;
				float yy20 = 0.0f;
				float yy21 = 0.0f;
				float yy22 = 0.0f;
				float yy23 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				int iter16 = 0;
				int iter17 = 0;
				int iter18 = 0;
				int iter19 = 0;
				int iter20 = 0;
				int iter21 = 0;
				int iter22 = 0;
				int iter23 = 0;

		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		        float xxXxCache16 = 0f;
		        float xxXxCache17 = 0f;
		        float xxXxCache18 = 0f;
		        float xxXxCache19 = 0f;
		        float xxXxCache20 = 0f;
		        float xxXxCache21 = 0f;
		        float xxXxCache22 = 0f;
		        float xxXxCache23 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        float yyYyCache16 = 0f;
		        float yyYyCache17 = 0f;
		        float yyYyCache18 = 0f;
		        float yyYyCache19 = 0f;
		        float yyYyCache20 = 0f;
		        float yyYyCache21 = 0f;
		        float yyYyCache22 = 0f;
		        float yyYyCache23 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done) && 
		        	   !(px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done) &&
		        	   !(px16done && px17done && px18done && px19done && px20done && px21done && px22done && px23done)) {
	        	
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 

		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
	        		
		        	yy16 = xx16*yy16;
		        	yy16 += yy16;
		        	yy16 += y;
		        	xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xxXxCache16 = xx16*xx16;
				    yyYyCache16 = yy16*yy16;
				    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
				    
	        		yy17 = xx17*yy17;
	        		yy17 += yy17;
	        		yy17 += y;
	        		xx17 = xxXxCache17 - yyYyCache17 + x17;
	        		xxXxCache17 = xx17*xx17;
	        		yyYyCache17 = yy17*yy17;
	        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
	        	
	        		yy18 = xx18*yy18;
	        		yy18 += yy18;
	        		yy18 += y;
	        		xx18 = xxXxCache18 - yyYyCache18 + x18;
	        		xxXxCache18 = xx18*xx18;
	        		yyYyCache18 = yy18*yy18;
	        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
	        	
	        		yy19 = xx19*yy19;
	        		yy19 += yy19;
	        		yy19 += y;
	        		xx19 = xxXxCache19 - yyYyCache19 + x19;
	        		xxXxCache19 = xx19*xx19;
	        		yyYyCache19 = yy19*yy19;
	        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
	        		
		        	yy20 = xx20*yy20;
		        	yy20 += yy20;
		        	yy20 += y;
		        	xx20 = xxXxCache20 - yyYyCache20 + x20;
				    xxXxCache20 = xx20*xx20;
				    yyYyCache20 = yy20*yy20;
				    if(!px20done){iter20++; px20done = !(xxXxCache20 + yyYyCache20 <= 4.0f && iter20<defaultIter);}
				    
	        		yy21 = xx21*yy21;
	        		yy21 += yy21;
	        		yy21 += y;
	        		xx21 = xxXxCache21 - yyYyCache21 + x21;
	        		xxXxCache21 = xx21*xx21;
	        		yyYyCache21 = yy21*yy21;
	        		if(!px21done) {iter21++; px21done = !(xxXxCache21 + yyYyCache21 <= 4.0f && iter21<defaultIter);}
	        	
	        		yy22 = xx22*yy22;
	        		yy22 += yy22;
	        		yy22 += y;
	        		xx22 = xxXxCache22 - yyYyCache22 + x22;
	        		xxXxCache22 = xx22*xx22;
	        		yyYyCache22 = yy22*yy22;
	        		if(!px22done) {iter22++; px22done = !(xxXxCache22 + yyYyCache22 <= 4.0f && iter22<defaultIter);}
	        	
	        		yy23 = xx23*yy23;
	        		yy23 += yy23;
	        		yy23 += y;
	        		xx23 = xxXxCache23 - yyYyCache23 + x23;
	        		xxXxCache23 = xx23*xx23;
	        		yyYyCache23 = yy23*yy23;
	        		if(!px23done) {iter23++;px23done = !(xxXxCache23 + yyYyCache23 <= 4.0f && iter23<defaultIter);} 
		        }
				        
		        while (!(px0done && px1done && px2done && px3done) && !(px4done && px5done && px6done && px7done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
		        while (!(px8done && px9done && px10done && px11done) && !(px12done && px13done && px14done && px15done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
		        }
		        
		        while (!(px16done && px17done && px18done && px19done) && !(px20done && px21done && px22done && px23done)) {
		        	
		        	yy16 = xx16*yy16;
		        	yy16 += yy16;
		        	yy16 += y;
		        	xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xxXxCache16 = xx16*xx16;
				    yyYyCache16 = yy16*yy16;
				    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
				    
	        		yy17 = xx17*yy17;
	        		yy17 += yy17;
	        		yy17 += y;
	        		xx17 = xxXxCache17 - yyYyCache17 + x17;
	        		xxXxCache17 = xx17*xx17;
	        		yyYyCache17 = yy17*yy17;
	        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
	        	
	        		yy18 = xx18*yy18;
	        		yy18 += yy18;
	        		yy18 += y;
	        		xx18 = xxXxCache18 - yyYyCache18 + x18;
	        		xxXxCache18 = xx18*xx18;
	        		yyYyCache18 = yy18*yy18;
	        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
	        	
	        		yy19 = xx19*yy19;
	        		yy19 += yy19;
	        		yy19 += y;
	        		xx19 = xxXxCache19 - yyYyCache19 + x19;
	        		xxXxCache19 = xx19*xx19;
	        		yyYyCache19 = yy19*yy19;
	        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
	        		
		        	yy20 = xx20*yy20;
		        	yy20 += yy20;
		        	yy20 += y;
		        	xx20 = xxXxCache20 - yyYyCache20 + x20;
				    xxXxCache20 = xx20*xx20;
				    yyYyCache20 = yy20*yy20;
				    if(!px20done){iter20++; px20done = !(xxXxCache20 + yyYyCache20 <= 4.0f && iter20<defaultIter);}
				    
	        		yy21 = xx21*yy21;
	        		yy21 += yy21;
	        		yy21 += y;
	        		xx21 = xxXxCache21 - yyYyCache21 + x21;
	        		xxXxCache21 = xx21*xx21;
	        		yyYyCache21 = yy21*yy21;
	        		if(!px21done) {iter21++; px21done = !(xxXxCache21 + yyYyCache21 <= 4.0f && iter21<defaultIter);}
	        	
	        		yy22 = xx22*yy22;
	        		yy22 += yy22;
	        		yy22 += y;
	        		xx22 = xxXxCache22 - yyYyCache22 + x22;
	        		xxXxCache22 = xx22*xx22;
	        		yyYyCache22 = yy22*yy22;
	        		if(!px22done) {iter22++; px22done = !(xxXxCache22 + yyYyCache22 <= 4.0f && iter22<defaultIter);}
	        	
	        		yy23 = xx23*yy23;
	        		yy23 += yy23;
	        		yy23 += y;
	        		xx23 = xxXxCache23 - yyYyCache23 + x23;
	        		xxXxCache23 = xx23*xx23;
	        		yyYyCache23 = yy23*yy23;
	        		if(!px23done) {iter23++;px23done = !(xxXxCache23 + yyYyCache23 <= 4.0f && iter23<defaultIter);} 
		        }
				        
		        while (!(px0done && px1done && px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
			    }
				        
		        while (!(px4done && px5done && px6done && px7done)) {				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
				        
		        while (!(px8done && px9done && px10done && px11done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
			    }
				        
		        while (!(px12done && px13done && px14done && px15done)) {
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			    }
				        
		        while (!(px16done && px17done && px18done && px19done)) {
		        	yy16 = xx16*yy16;
		        	yy16 += yy16;
		        	yy16 += y;
		        	xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xxXxCache16 = xx16*xx16;
				    yyYyCache16 = yy16*yy16;
				    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
				    
	        		yy17 = xx17*yy17;
	        		yy17 += yy17;
	        		yy17 += y;
	        		xx17 = xxXxCache17 - yyYyCache17 + x17;
	        		xxXxCache17 = xx17*xx17;
	        		yyYyCache17 = yy17*yy17;
	        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
	        	
	        		yy18 = xx18*yy18;
	        		yy18 += yy18;
	        		yy18 += y;
	        		xx18 = xxXxCache18 - yyYyCache18 + x18;
	        		xxXxCache18 = xx18*xx18;
	        		yyYyCache18 = yy18*yy18;
	        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
	        	
	        		yy19 = xx19*yy19;
	        		yy19 += yy19;
	        		yy19 += y;
	        		xx19 = xxXxCache19 - yyYyCache19 + x19;
	        		xxXxCache19 = xx19*xx19;
	        		yyYyCache19 = yy19*yy19;
	        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
		        }
		        
		        while (!(px20done && px21done && px22done && px23done)) {
		        	yy20 = xx20*yy20;
		        	yy20 += yy20;
		        	yy20 += y;
		        	xx20 = xxXxCache20 - yyYyCache20 + x20;
				    xxXxCache20 = xx20*xx20;
				    yyYyCache20 = yy20*yy20;
				    if(!px20done){iter20++; px20done = !(xxXxCache20 + yyYyCache20 <= 4.0f && iter20<defaultIter);}
				    
	        		yy21 = xx21*yy21;
	        		yy21 += yy21;
	        		yy21 += y;
	        		xx21 = xxXxCache21 - yyYyCache21 + x21;
	        		xxXxCache21 = xx21*xx21;
	        		yyYyCache21 = yy21*yy21;
	        		if(!px21done) {iter21++; px21done = !(xxXxCache21 + yyYyCache21 <= 4.0f && iter21<defaultIter);}
	        	
	        		yy22 = xx22*yy22;
	        		yy22 += yy22;
	        		yy22 += y;
	        		xx22 = xxXxCache22 - yyYyCache22 + x22;
	        		xxXxCache22 = xx22*xx22;
	        		yyYyCache22 = yy22*yy22;
	        		if(!px22done) {iter22++; px22done = !(xxXxCache22 + yyYyCache22 <= 4.0f && iter22<defaultIter);}
	        	
	        		yy23 = xx23*yy23;
	        		yy23 += yy23;
	        		yy23 += y;
	        		xx23 = xxXxCache23 - yyYyCache23 + x23;
	        		xxXxCache23 = xx23*xx23;
	        		yyYyCache23 = yy23*yy23;
	        		if(!px23done) {iter23++;px23done = !(xxXxCache23 + yyYyCache23 <= 4.0f && iter23<defaultIter);} 
		        }
						        
			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    pictureBuffer[index16] = precomputedColors[iter16];
			    pictureBuffer[index17] = precomputedColors[iter17];
			    pictureBuffer[index18] = precomputedColors[iter18];
			    pictureBuffer[index19] = precomputedColors[iter19];
			    pictureBuffer[index20] = precomputedColors[iter20];
			    pictureBuffer[index21] = precomputedColors[iter21];
			    pictureBuffer[index22] = precomputedColors[iter22];
			    pictureBuffer[index23] = precomputedColors[iter23];			    
			    
			    x = x23 + deltaX;
			    pX = pX + 24;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_24_v2() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;
				boolean px16done = false;
				boolean px17done = false;
				boolean px18done = false;
				boolean px19done = false;
				boolean px20done = false;
				boolean px21done = false;
				boolean px22done = false;
				boolean px23done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				int index16 = index++;
				int index17 = index++;
				int index18 = index++;
				int index19 = index++;
				int index20 = index++;
				int index21 = index++;
				int index22 = index++;
				int index23 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				float x16 = x15 + deltaX;
				float x17 = x16 + deltaX;
				float x18 = x17 + deltaX;
				float x19 = x18 + deltaX;
				float x20 = x19 + deltaX;
				float x21 = x20 + deltaX;
				float x22 = x21 + deltaX;
				float x23 = x22 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				float xx16 = 0.0f;
				float xx17 = 0.0f;
				float xx18 = 0.0f;
				float xx19 = 0.0f;
				float xx20 = 0.0f;
				float xx21 = 0.0f;
				float xx22 = 0.0f;
				float xx23 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				float yy16 = 0.0f;
				float yy17 = 0.0f;
				float yy18 = 0.0f;
				float yy19 = 0.0f;
				float yy20 = 0.0f;
				float yy21 = 0.0f;
				float yy22 = 0.0f;
				float yy23 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				int iter16 = 0;
				int iter17 = 0;
				int iter18 = 0;
				int iter19 = 0;
				int iter20 = 0;
				int iter21 = 0;
				int iter22 = 0;
				int iter23 = 0;

		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		        float xxXxCache16 = 0f;
		        float xxXxCache17 = 0f;
		        float xxXxCache18 = 0f;
		        float xxXxCache19 = 0f;
		        float xxXxCache20 = 0f;
		        float xxXxCache21 = 0f;
		        float xxXxCache22 = 0f;
		        float xxXxCache23 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        float yyYyCache16 = 0f;
		        float yyYyCache17 = 0f;
		        float yyYyCache18 = 0f;
		        float yyYyCache19 = 0f;
		        float yyYyCache20 = 0f;
		        float yyYyCache21 = 0f;
		        float yyYyCache22 = 0f;
		        float yyYyCache23 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done) && 
		        	   !(px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done)) {
	        	
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 

		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
		        }
				        
		        while (!(px0done && px1done && px2done && px3done) && !(px4done && px5done && px6done && px7done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
		        while (!(px8done && px9done && px10done && px11done) && !(px12done && px13done && px14done && px15done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
		        }
		        
		        while (!(px16done && px17done && px18done && px19done) && !(px20done && px21done && px22done && px23done)) {
		        	
		        	yy16 = xx16*yy16;
		        	yy16 += yy16;
		        	yy16 += y;
		        	xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xxXxCache16 = xx16*xx16;
				    yyYyCache16 = yy16*yy16;
				    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
				    
	        		yy17 = xx17*yy17;
	        		yy17 += yy17;
	        		yy17 += y;
	        		xx17 = xxXxCache17 - yyYyCache17 + x17;
	        		xxXxCache17 = xx17*xx17;
	        		yyYyCache17 = yy17*yy17;
	        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
	        	
	        		yy18 = xx18*yy18;
	        		yy18 += yy18;
	        		yy18 += y;
	        		xx18 = xxXxCache18 - yyYyCache18 + x18;
	        		xxXxCache18 = xx18*xx18;
	        		yyYyCache18 = yy18*yy18;
	        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
	        	
	        		yy19 = xx19*yy19;
	        		yy19 += yy19;
	        		yy19 += y;
	        		xx19 = xxXxCache19 - yyYyCache19 + x19;
	        		xxXxCache19 = xx19*xx19;
	        		yyYyCache19 = yy19*yy19;
	        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
	        		
		        	yy20 = xx20*yy20;
		        	yy20 += yy20;
		        	yy20 += y;
		        	xx20 = xxXxCache20 - yyYyCache20 + x20;
				    xxXxCache20 = xx20*xx20;
				    yyYyCache20 = yy20*yy20;
				    if(!px20done){iter20++; px20done = !(xxXxCache20 + yyYyCache20 <= 4.0f && iter20<defaultIter);}
				    
	        		yy21 = xx21*yy21;
	        		yy21 += yy21;
	        		yy21 += y;
	        		xx21 = xxXxCache21 - yyYyCache21 + x21;
	        		xxXxCache21 = xx21*xx21;
	        		yyYyCache21 = yy21*yy21;
	        		if(!px21done) {iter21++; px21done = !(xxXxCache21 + yyYyCache21 <= 4.0f && iter21<defaultIter);}
	        	
	        		yy22 = xx22*yy22;
	        		yy22 += yy22;
	        		yy22 += y;
	        		xx22 = xxXxCache22 - yyYyCache22 + x22;
	        		xxXxCache22 = xx22*xx22;
	        		yyYyCache22 = yy22*yy22;
	        		if(!px22done) {iter22++; px22done = !(xxXxCache22 + yyYyCache22 <= 4.0f && iter22<defaultIter);}
	        	
	        		yy23 = xx23*yy23;
	        		yy23 += yy23;
	        		yy23 += y;
	        		xx23 = xxXxCache23 - yyYyCache23 + x23;
	        		xxXxCache23 = xx23*xx23;
	        		yyYyCache23 = yy23*yy23;
	        		if(!px23done) {iter23++;px23done = !(xxXxCache23 + yyYyCache23 <= 4.0f && iter23<defaultIter);} 
		        }
				        
		        while (!(px0done && px1done && px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
			    }
				        
		        while (!(px4done && px5done && px6done && px7done)) {				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
				        
		        while (!(px8done && px9done && px10done && px11done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
			    }
				        
		        while (!(px12done && px13done && px14done && px15done)) {
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			    }
				        
		        while (!(px16done && px17done && px18done && px19done)) {
		        	yy16 = xx16*yy16;
		        	yy16 += yy16;
		        	yy16 += y;
		        	xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xxXxCache16 = xx16*xx16;
				    yyYyCache16 = yy16*yy16;
				    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
				    
	        		yy17 = xx17*yy17;
	        		yy17 += yy17;
	        		yy17 += y;
	        		xx17 = xxXxCache17 - yyYyCache17 + x17;
	        		xxXxCache17 = xx17*xx17;
	        		yyYyCache17 = yy17*yy17;
	        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
	        	
	        		yy18 = xx18*yy18;
	        		yy18 += yy18;
	        		yy18 += y;
	        		xx18 = xxXxCache18 - yyYyCache18 + x18;
	        		xxXxCache18 = xx18*xx18;
	        		yyYyCache18 = yy18*yy18;
	        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
	        	
	        		yy19 = xx19*yy19;
	        		yy19 += yy19;
	        		yy19 += y;
	        		xx19 = xxXxCache19 - yyYyCache19 + x19;
	        		xxXxCache19 = xx19*xx19;
	        		yyYyCache19 = yy19*yy19;
	        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
		        }
		        
		        while (!(px20done && px21done && px22done && px23done)) {
		        	yy20 = xx20*yy20;
		        	yy20 += yy20;
		        	yy20 += y;
		        	xx20 = xxXxCache20 - yyYyCache20 + x20;
				    xxXxCache20 = xx20*xx20;
				    yyYyCache20 = yy20*yy20;
				    if(!px20done){iter20++; px20done = !(xxXxCache20 + yyYyCache20 <= 4.0f && iter20<defaultIter);}
				    
	        		yy21 = xx21*yy21;
	        		yy21 += yy21;
	        		yy21 += y;
	        		xx21 = xxXxCache21 - yyYyCache21 + x21;
	        		xxXxCache21 = xx21*xx21;
	        		yyYyCache21 = yy21*yy21;
	        		if(!px21done) {iter21++; px21done = !(xxXxCache21 + yyYyCache21 <= 4.0f && iter21<defaultIter);}
	        	
	        		yy22 = xx22*yy22;
	        		yy22 += yy22;
	        		yy22 += y;
	        		xx22 = xxXxCache22 - yyYyCache22 + x22;
	        		xxXxCache22 = xx22*xx22;
	        		yyYyCache22 = yy22*yy22;
	        		if(!px22done) {iter22++; px22done = !(xxXxCache22 + yyYyCache22 <= 4.0f && iter22<defaultIter);}
	        	
	        		yy23 = xx23*yy23;
	        		yy23 += yy23;
	        		yy23 += y;
	        		xx23 = xxXxCache23 - yyYyCache23 + x23;
	        		xxXxCache23 = xx23*xx23;
	        		yyYyCache23 = yy23*yy23;
	        		if(!px23done) {iter23++;px23done = !(xxXxCache23 + yyYyCache23 <= 4.0f && iter23<defaultIter);} 
		        }
						        
			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    pictureBuffer[index16] = precomputedColors[iter16];
			    pictureBuffer[index17] = precomputedColors[iter17];
			    pictureBuffer[index18] = precomputedColors[iter18];
			    pictureBuffer[index19] = precomputedColors[iter19];
			    pictureBuffer[index20] = precomputedColors[iter20];
			    pictureBuffer[index21] = precomputedColors[iter21];
			    pictureBuffer[index22] = precomputedColors[iter22];
			    pictureBuffer[index23] = precomputedColors[iter23];			    
			    
			    x = x23 + deltaX;
			    pX = pX + 24;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_24_v3() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;
				boolean px16done = false;
				boolean px17done = false;
				boolean px18done = false;
				boolean px19done = false;
				boolean px20done = false;
				boolean px21done = false;
				boolean px22done = false;
				boolean px23done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				int index16 = index++;
				int index17 = index++;
				int index18 = index++;
				int index19 = index++;
				int index20 = index++;
				int index21 = index++;
				int index22 = index++;
				int index23 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				float x16 = x15 + deltaX;
				float x17 = x16 + deltaX;
				float x18 = x17 + deltaX;
				float x19 = x18 + deltaX;
				float x20 = x19 + deltaX;
				float x21 = x20 + deltaX;
				float x22 = x21 + deltaX;
				float x23 = x22 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				float xx16 = 0.0f;
				float xx17 = 0.0f;
				float xx18 = 0.0f;
				float xx19 = 0.0f;
				float xx20 = 0.0f;
				float xx21 = 0.0f;
				float xx22 = 0.0f;
				float xx23 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				float yy16 = 0.0f;
				float yy17 = 0.0f;
				float yy18 = 0.0f;
				float yy19 = 0.0f;
				float yy20 = 0.0f;
				float yy21 = 0.0f;
				float yy22 = 0.0f;
				float yy23 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				int iter16 = 0;
				int iter17 = 0;
				int iter18 = 0;
				int iter19 = 0;
				int iter20 = 0;
				int iter21 = 0;
				int iter22 = 0;
				int iter23 = 0;

		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		        float xxXxCache16 = 0f;
		        float xxXxCache17 = 0f;
		        float xxXxCache18 = 0f;
		        float xxXxCache19 = 0f;
		        float xxXxCache20 = 0f;
		        float xxXxCache21 = 0f;
		        float xxXxCache22 = 0f;
		        float xxXxCache23 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        float yyYyCache16 = 0f;
		        float yyYyCache17 = 0f;
		        float yyYyCache18 = 0f;
		        float yyYyCache19 = 0f;
		        float yyYyCache20 = 0f;
		        float yyYyCache21 = 0f;
		        float yyYyCache22 = 0f;
		        float yyYyCache23 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done) && 
			        	   !(px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done) &&
			        	   !(px16done && px17done && px18done && px19done)) {
		        	
			        	yy0 = xx0*yy0;
			        	yy0 += yy0;
			        	yy0 += y;
			        	xx0 = xxXxCache0 - yyYyCache0 + x0;
			        	xxXxCache0 = xx0*xx0;
			        	yyYyCache0 = yy0*yy0;
			        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
			        	
			        	yy1 = xx1*yy1;
			        	yy1 += yy1;
			        	yy1 += y;
			        	xx1 = xxXxCache1 - yyYyCache1 + x1;
			        	xxXxCache1 = xx1*xx1;
			        	yyYyCache1 = yy1*yy1;
			        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
			        	
			        	yy2 = xx2*yy2;
			        	yy2 += yy2;
			        	yy2 += y;
			        	xx2 = xxXxCache2 - yyYyCache2 + x2;
			        	xxXxCache2 = xx2*xx2;
			        	yyYyCache2 = yy2*yy2;
			        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
			        	
			        	yy3 = xx3*yy3;
			        	yy3 += yy3;
			        	yy3 += y;
			        	xx3 = xxXxCache3 - yyYyCache3 + x3;
					    xxXxCache3 = xx3*xx3;
					    yyYyCache3 = yy3*yy3;
					    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
					    
			        	yy4 = xx4*yy4;
			        	yy4 += yy4;
			        	yy4 += y;
			        	xx4 = xxXxCache4 - yyYyCache4 + x4;
					    xxXxCache4 = xx4*xx4;
					    yyYyCache4 = yy4*yy4;
					    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
					    
		        		yy5 = xx5*yy5;
		        		yy5 += yy5;
		        		yy5 += y;
		        		xx5 = xxXxCache5 - yyYyCache5 + x5;
		        		xxXxCache5 = xx5*xx5;
		        		yyYyCache5 = yy5*yy5;
		        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
		        	
		        		yy6 = xx6*yy6;
		        		yy6 += yy6;
		        		yy6 += y;
		        		xx6 = xxXxCache6 - yyYyCache6 + x6;
		        		xxXxCache6 = xx6*xx6;
		        		yyYyCache6 = yy6*yy6;
		        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
		        	
		        		yy7 = xx7*yy7;
		        		yy7 += yy7;
		        		yy7 += y;
		        		xx7 = xxXxCache7 - yyYyCache7 + x7;
		        		xxXxCache7 = xx7*xx7;
		        		yyYyCache7 = yy7*yy7;
		        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 

			        	yy8 = xx8*yy8;
			        	yy8 += yy8;
			        	yy8 += y;
			        	xx8 = xxXxCache8 - yyYyCache8 + x8;
			        	xxXxCache8 = xx8*xx8;
			        	yyYyCache8 = yy8*yy8;
			        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
			        	
			        	yy9 = xx9*yy9;
			        	yy9 += yy9;
			        	yy9 += y;
			        	xx9 = xxXxCache9 - yyYyCache9 + x9;
			        	xxXxCache9 = xx9*xx9;
			        	yyYyCache9 = yy9*yy9;
			        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
			        	
			        	yy10 = xx10*yy10;
			        	yy10 += yy10;
			        	yy10 += y;
			        	xx10 = xxXxCache10 - yyYyCache10 + x10;
			        	xxXxCache10 = xx10*xx10;
			        	yyYyCache10 = yy10*yy10;
			        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
			        	
			        	yy11 = xx11*yy11;
			        	yy11 += yy11;
			        	yy11 += y;
			        	xx11 = xxXxCache11 - yyYyCache11 + x11;
					    xxXxCache11 = xx11*xx11;
					    yyYyCache11 = yy11*yy11;
					    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
					    
			        	yy12 = xx12*yy12;
			        	yy12 += yy12;
			        	yy12 += y;
			        	xx12 = xxXxCache12 - yyYyCache12 + x12;
					    xxXxCache12 = xx12*xx12;
					    yyYyCache12 = yy12*yy12;
					    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
					    
		        		yy13 = xx13*yy13;
		        		yy13 += yy13;
		        		yy13 += y;
		        		xx13 = xxXxCache13 - yyYyCache13 + x13;
		        		xxXxCache13 = xx13*xx13;
		        		yyYyCache13 = yy13*yy13;
		        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
		        	
		        		yy14 = xx14*yy14;
		        		yy14 += yy14;
		        		yy14 += y;
		        		xx14 = xxXxCache14 - yyYyCache14 + x14;
		        		xxXxCache14 = xx14*xx14;
		        		yyYyCache14 = yy14*yy14;
		        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
		        	
		        		yy15 = xx15*yy15;
		        		yy15 += yy15;
		        		yy15 += y;
		        		xx15 = xxXxCache15 - yyYyCache15 + x15;
		        		xxXxCache15 = xx15*xx15;
		        		yyYyCache15 = yy15*yy15;
		        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
		        		
			        	yy16 = xx16*yy16;
			        	yy16 += yy16;
			        	yy16 += y;
			        	xx16 = xxXxCache16 - yyYyCache16 + x16;
					    xxXxCache16 = xx16*xx16;
					    yyYyCache16 = yy16*yy16;
					    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
					    
		        		yy17 = xx17*yy17;
		        		yy17 += yy17;
		        		yy17 += y;
		        		xx17 = xxXxCache17 - yyYyCache17 + x17;
		        		xxXxCache17 = xx17*xx17;
		        		yyYyCache17 = yy17*yy17;
		        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
		        	
		        		yy18 = xx18*yy18;
		        		yy18 += yy18;
		        		yy18 += y;
		        		xx18 = xxXxCache18 - yyYyCache18 + x18;
		        		xxXxCache18 = xx18*xx18;
		        		yyYyCache18 = yy18*yy18;
		        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
		        	
		        		yy19 = xx19*yy19;
		        		yy19 += yy19;
		        		yy19 += y;
		        		xx19 = xxXxCache19 - yyYyCache19 + x19;
		        		xxXxCache19 = xx19*xx19;
		        		yyYyCache19 = yy19*yy19;
		        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
			        }
					        
			        while (!(px0done && px1done && px2done && px3done) && !(px4done && px5done && px6done && px7done)) {
			        	yy0 = xx0*yy0;
			        	yy0 += yy0;
			        	yy0 += y;
			        	xx0 = xxXxCache0 - yyYyCache0 + x0;
			        	xxXxCache0 = xx0*xx0;
			        	yyYyCache0 = yy0*yy0;
			        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
			        	
			        	yy1 = xx1*yy1;
			        	yy1 += yy1;
			        	yy1 += y;
			        	xx1 = xxXxCache1 - yyYyCache1 + x1;
			        	xxXxCache1 = xx1*xx1;
			        	yyYyCache1 = yy1*yy1;
			        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
			        	
			        	yy2 = xx2*yy2;
			        	yy2 += yy2;
			        	yy2 += y;
			        	xx2 = xxXxCache2 - yyYyCache2 + x2;
			        	xxXxCache2 = xx2*xx2;
			        	yyYyCache2 = yy2*yy2;
			        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
			        	
			        	yy3 = xx3*yy3;
			        	yy3 += yy3;
			        	yy3 += y;
			        	xx3 = xxXxCache3 - yyYyCache3 + x3;
					    xxXxCache3 = xx3*xx3;
					    yyYyCache3 = yy3*yy3;
					    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
					    
			        	yy4 = xx4*yy4;
			        	yy4 += yy4;
			        	yy4 += y;
			        	xx4 = xxXxCache4 - yyYyCache4 + x4;
					    xxXxCache4 = xx4*xx4;
					    yyYyCache4 = yy4*yy4;
					    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
					    
		        		yy5 = xx5*yy5;
		        		yy5 += yy5;
		        		yy5 += y;
		        		xx5 = xxXxCache5 - yyYyCache5 + x5;
		        		xxXxCache5 = xx5*xx5;
		        		yyYyCache5 = yy5*yy5;
		        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
		        	
		        		yy6 = xx6*yy6;
		        		yy6 += yy6;
		        		yy6 += y;
		        		xx6 = xxXxCache6 - yyYyCache6 + x6;
		        		xxXxCache6 = xx6*xx6;
		        		yyYyCache6 = yy6*yy6;
		        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
		        	
		        		yy7 = xx7*yy7;
		        		yy7 += yy7;
		        		yy7 += y;
		        		xx7 = xxXxCache7 - yyYyCache7 + x7;
		        		xxXxCache7 = xx7*xx7;
		        		yyYyCache7 = yy7*yy7;
		        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
				    }
			        
			        while (!(px8done && px9done && px10done && px11done) && !(px12done && px13done && px14done && px15done)) {
			        	yy8 = xx8*yy8;
			        	yy8 += yy8;
			        	yy8 += y;
			        	xx8 = xxXxCache8 - yyYyCache8 + x8;
			        	xxXxCache8 = xx8*xx8;
			        	yyYyCache8 = yy8*yy8;
			        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
			        	
			        	yy9 = xx9*yy9;
			        	yy9 += yy9;
			        	yy9 += y;
			        	xx9 = xxXxCache9 - yyYyCache9 + x9;
			        	xxXxCache9 = xx9*xx9;
			        	yyYyCache9 = yy9*yy9;
			        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
			        	
			        	yy10 = xx10*yy10;
			        	yy10 += yy10;
			        	yy10 += y;
			        	xx10 = xxXxCache10 - yyYyCache10 + x10;
			        	xxXxCache10 = xx10*xx10;
			        	yyYyCache10 = yy10*yy10;
			        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
			        	
			        	yy11 = xx11*yy11;
			        	yy11 += yy11;
			        	yy11 += y;
			        	xx11 = xxXxCache11 - yyYyCache11 + x11;
					    xxXxCache11 = xx11*xx11;
					    yyYyCache11 = yy11*yy11;
					    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
					    
			        	yy12 = xx12*yy12;
			        	yy12 += yy12;
			        	yy12 += y;
			        	xx12 = xxXxCache12 - yyYyCache12 + x12;
					    xxXxCache12 = xx12*xx12;
					    yyYyCache12 = yy12*yy12;
					    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
					    
		        		yy13 = xx13*yy13;
		        		yy13 += yy13;
		        		yy13 += y;
		        		xx13 = xxXxCache13 - yyYyCache13 + x13;
		        		xxXxCache13 = xx13*xx13;
		        		yyYyCache13 = yy13*yy13;
		        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
		        	
		        		yy14 = xx14*yy14;
		        		yy14 += yy14;
		        		yy14 += y;
		        		xx14 = xxXxCache14 - yyYyCache14 + x14;
		        		xxXxCache14 = xx14*xx14;
		        		yyYyCache14 = yy14*yy14;
		        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
		        	
		        		yy15 = xx15*yy15;
		        		yy15 += yy15;
		        		yy15 += y;
		        		xx15 = xxXxCache15 - yyYyCache15 + x15;
		        		xxXxCache15 = xx15*xx15;
		        		yyYyCache15 = yy15*yy15;
		        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			        }
					        
			        while (!(px0done && px1done && px2done && px3done)) {
			        	yy0 = xx0*yy0;
			        	yy0 += yy0;
			        	yy0 += y;
			        	xx0 = xxXxCache0 - yyYyCache0 + x0;
			        	xxXxCache0 = xx0*xx0;
			        	yyYyCache0 = yy0*yy0;
			        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
			        	
			        	yy1 = xx1*yy1;
			        	yy1 += yy1;
			        	yy1 += y;
			        	xx1 = xxXxCache1 - yyYyCache1 + x1;
			        	xxXxCache1 = xx1*xx1;
			        	yyYyCache1 = yy1*yy1;
			        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
			        	
			        	yy2 = xx2*yy2;
			        	yy2 += yy2;
			        	yy2 += y;
			        	xx2 = xxXxCache2 - yyYyCache2 + x2;
			        	xxXxCache2 = xx2*xx2;
			        	yyYyCache2 = yy2*yy2;
			        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
			        	
			        	yy3 = xx3*yy3;
			        	yy3 += yy3;
			        	yy3 += y;
			        	xx3 = xxXxCache3 - yyYyCache3 + x3;
					    xxXxCache3 = xx3*xx3;
					    yyYyCache3 = yy3*yy3;
					    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    }
					        
			        while (!(px4done && px5done && px6done && px7done)) {				    
			        	yy4 = xx4*yy4;
			        	yy4 += yy4;
			        	yy4 += y;
			        	xx4 = xxXxCache4 - yyYyCache4 + x4;
					    xxXxCache4 = xx4*xx4;
					    yyYyCache4 = yy4*yy4;
					    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
					    
		        		yy5 = xx5*yy5;
		        		yy5 += yy5;
		        		yy5 += y;
		        		xx5 = xxXxCache5 - yyYyCache5 + x5;
		        		xxXxCache5 = xx5*xx5;
		        		yyYyCache5 = yy5*yy5;
		        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
		        	
		        		yy6 = xx6*yy6;
		        		yy6 += yy6;
		        		yy6 += y;
		        		xx6 = xxXxCache6 - yyYyCache6 + x6;
		        		xxXxCache6 = xx6*xx6;
		        		yyYyCache6 = yy6*yy6;
		        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
		        	
		        		yy7 = xx7*yy7;
		        		yy7 += yy7;
		        		yy7 += y;
		        		xx7 = xxXxCache7 - yyYyCache7 + x7;
		        		xxXxCache7 = xx7*xx7;
		        		yyYyCache7 = yy7*yy7;
		        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
				    }
					        
			        while (!(px8done && px9done && px10done && px11done)) {
			        	yy8 = xx8*yy8;
			        	yy8 += yy8;
			        	yy8 += y;
			        	xx8 = xxXxCache8 - yyYyCache8 + x8;
			        	xxXxCache8 = xx8*xx8;
			        	yyYyCache8 = yy8*yy8;
			        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
			        	
			        	yy9 = xx9*yy9;
			        	yy9 += yy9;
			        	yy9 += y;
			        	xx9 = xxXxCache9 - yyYyCache9 + x9;
			        	xxXxCache9 = xx9*xx9;
			        	yyYyCache9 = yy9*yy9;
			        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
			        	
			        	yy10 = xx10*yy10;
			        	yy10 += yy10;
			        	yy10 += y;
			        	xx10 = xxXxCache10 - yyYyCache10 + x10;
			        	xxXxCache10 = xx10*xx10;
			        	yyYyCache10 = yy10*yy10;
			        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
			        	
			        	yy11 = xx11*yy11;
			        	yy11 += yy11;
			        	yy11 += y;
			        	xx11 = xxXxCache11 - yyYyCache11 + x11;
					    xxXxCache11 = xx11*xx11;
					    yyYyCache11 = yy11*yy11;
					    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    }
					        
			        while (!(px12done && px13done && px14done && px15done)) {
			        	yy12 = xx12*yy12;
			        	yy12 += yy12;
			        	yy12 += y;
			        	xx12 = xxXxCache12 - yyYyCache12 + x12;
					    xxXxCache12 = xx12*xx12;
					    yyYyCache12 = yy12*yy12;
					    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
					    
		        		yy13 = xx13*yy13;
		        		yy13 += yy13;
		        		yy13 += y;
		        		xx13 = xxXxCache13 - yyYyCache13 + x13;
		        		xxXxCache13 = xx13*xx13;
		        		yyYyCache13 = yy13*yy13;
		        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
		        	
		        		yy14 = xx14*yy14;
		        		yy14 += yy14;
		        		yy14 += y;
		        		xx14 = xxXxCache14 - yyYyCache14 + x14;
		        		xxXxCache14 = xx14*xx14;
		        		yyYyCache14 = yy14*yy14;
		        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
		        	
		        		yy15 = xx15*yy15;
		        		yy15 += yy15;
		        		yy15 += y;
		        		xx15 = xxXxCache15 - yyYyCache15 + x15;
		        		xxXxCache15 = xx15*xx15;
		        		yyYyCache15 = yy15*yy15;
		        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
				    }
					        
			        while (!(px16done && px17done && px18done && px19done)) {
			        	yy16 = xx16*yy16;
			        	yy16 += yy16;
			        	yy16 += y;
			        	xx16 = xxXxCache16 - yyYyCache16 + x16;
					    xxXxCache16 = xx16*xx16;
					    yyYyCache16 = yy16*yy16;
					    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
					    
		        		yy17 = xx17*yy17;
		        		yy17 += yy17;
		        		yy17 += y;
		        		xx17 = xxXxCache17 - yyYyCache17 + x17;
		        		xxXxCache17 = xx17*xx17;
		        		yyYyCache17 = yy17*yy17;
		        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
		        	
		        		yy18 = xx18*yy18;
		        		yy18 += yy18;
		        		yy18 += y;
		        		xx18 = xxXxCache18 - yyYyCache18 + x18;
		        		xxXxCache18 = xx18*xx18;
		        		yyYyCache18 = yy18*yy18;
		        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
		        	
		        		yy19 = xx19*yy19;
		        		yy19 += yy19;
		        		yy19 += y;
		        		xx19 = xxXxCache19 - yyYyCache19 + x19;
		        		xxXxCache19 = xx19*xx19;
		        		yyYyCache19 = yy19*yy19;
		        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
			        }
		        
		        while (!(px20done && px21done && px22done && px23done)) {
		        	yy20 = xx20*yy20;
		        	yy20 += yy20;
		        	yy20 += y;
		        	xx20 = xxXxCache20 - yyYyCache20 + x20;
				    xxXxCache20 = xx20*xx20;
				    yyYyCache20 = yy20*yy20;
				    if(!px20done){iter20++; px20done = !(xxXxCache20 + yyYyCache20 <= 4.0f && iter20<defaultIter);}
				    
	        		yy21 = xx21*yy21;
	        		yy21 += yy21;
	        		yy21 += y;
	        		xx21 = xxXxCache21 - yyYyCache21 + x21;
	        		xxXxCache21 = xx21*xx21;
	        		yyYyCache21 = yy21*yy21;
	        		if(!px21done) {iter21++; px21done = !(xxXxCache21 + yyYyCache21 <= 4.0f && iter21<defaultIter);}
	        	
	        		yy22 = xx22*yy22;
	        		yy22 += yy22;
	        		yy22 += y;
	        		xx22 = xxXxCache22 - yyYyCache22 + x22;
	        		xxXxCache22 = xx22*xx22;
	        		yyYyCache22 = yy22*yy22;
	        		if(!px22done) {iter22++; px22done = !(xxXxCache22 + yyYyCache22 <= 4.0f && iter22<defaultIter);}
	        	
	        		yy23 = xx23*yy23;
	        		yy23 += yy23;
	        		yy23 += y;
	        		xx23 = xxXxCache23 - yyYyCache23 + x23;
	        		xxXxCache23 = xx23*xx23;
	        		yyYyCache23 = yy23*yy23;
	        		if(!px23done) {iter23++;px23done = !(xxXxCache23 + yyYyCache23 <= 4.0f && iter23<defaultIter);} 
		        }
						        
			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    pictureBuffer[index16] = precomputedColors[iter16];
			    pictureBuffer[index17] = precomputedColors[iter17];
			    pictureBuffer[index18] = precomputedColors[iter18];
			    pictureBuffer[index19] = precomputedColors[iter19];
			    pictureBuffer[index20] = precomputedColors[iter20];
			    pictureBuffer[index21] = precomputedColors[iter21];
			    pictureBuffer[index22] = precomputedColors[iter22];
			    pictureBuffer[index23] = precomputedColors[iter23];			    
			    
			    x = x23 + deltaX;
			    pX = pX + 24;
			}
		}		
	}
	

	
	private void updateMandelbrotImageCGRA_32() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;
				boolean px16done = false;
				boolean px17done = false;
				boolean px18done = false;
				boolean px19done = false;
				boolean px20done = false;
				boolean px21done = false;
				boolean px22done = false;
				boolean px23done = false;
				boolean px24done = false;
				boolean px25done = false;
				boolean px26done = false;
				boolean px27done = false;
				boolean px28done = false;
				boolean px29done = false;
				boolean px30done = false;
				boolean px31done = false;
	
				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				int index16 = index++;
				int index17 = index++;
				int index18 = index++;
				int index19 = index++;
				int index20 = index++;
				int index21 = index++;
				int index22 = index++;
				int index23 = index++;
				int index24 = index++;
				int index25 = index++;
				int index26 = index++;
				int index27 = index++;
				int index28 = index++;
				int index29 = index++;
				int index30 = index++;
				int index31 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				float x16 = x15 + deltaX;
				float x17 = x16 + deltaX;
				float x18 = x17 + deltaX;
				float x19 = x18 + deltaX;
				float x20 = x19 + deltaX;
				float x21 = x20 + deltaX;
				float x22 = x21 + deltaX;
				float x23 = x22 + deltaX;
				float x24 = x23 + deltaX;
				float x25 = x24 + deltaX;
				float x26 = x25 + deltaX;
				float x27 = x26 + deltaX;
				float x28 = x27 + deltaX;
				float x29 = x28 + deltaX;
				float x30 = x29 + deltaX;
				float x31 = x30 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				float xx16 = 0.0f;
				float xx17 = 0.0f;
				float xx18 = 0.0f;
				float xx19 = 0.0f;
				float xx20 = 0.0f;
				float xx21 = 0.0f;
				float xx22 = 0.0f;
				float xx23 = 0.0f;
				float xx24 = 0.0f;
				float xx25 = 0.0f;
				float xx26 = 0.0f;
				float xx27 = 0.0f;
				float xx28 = 0.0f;
				float xx29 = 0.0f;
				float xx30 = 0.0f;
				float xx31 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				float yy16 = 0.0f;
				float yy17 = 0.0f;
				float yy18 = 0.0f;
				float yy19 = 0.0f;
				float yy20 = 0.0f;
				float yy21 = 0.0f;
				float yy22 = 0.0f;
				float yy23 = 0.0f;
				float yy24 = 0.0f;
				float yy25 = 0.0f;
				float yy26 = 0.0f;
				float yy27 = 0.0f;
				float yy28 = 0.0f;
				float yy29 = 0.0f;
				float yy30 = 0.0f;
				float yy31 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				int iter16 = 0;
				int iter17 = 0;
				int iter18 = 0;
				int iter19 = 0;
				int iter20 = 0;
				int iter21 = 0;
				int iter22 = 0;
				int iter23 = 0;
				int iter24 = 0;
				int iter25 = 0;
				int iter26 = 0;
				int iter27 = 0;
				int iter28 = 0;
				int iter29 = 0;
				int iter30 = 0;
				int iter31 = 0;
				
		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		        float xxXxCache16 = 0f;
		        float xxXxCache17 = 0f;
		        float xxXxCache18 = 0f;
		        float xxXxCache19 = 0f;
		        float xxXxCache20 = 0f;
		        float xxXxCache21 = 0f;
		        float xxXxCache22 = 0f;
		        float xxXxCache23 = 0f;
		        float xxXxCache24 = 0f;
		        float xxXxCache25 = 0f;
		        float xxXxCache26 = 0f;
		        float xxXxCache27 = 0f;
		        float xxXxCache28 = 0f;
		        float xxXxCache29 = 0f;
		        float xxXxCache30 = 0f;
		        float xxXxCache31 = 0f;
	
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        float yyYyCache16 = 0f;
		        float yyYyCache17 = 0f;
		        float yyYyCache18 = 0f;
		        float yyYyCache19 = 0f;
		        float yyYyCache20 = 0f;
		        float yyYyCache21 = 0f;
		        float yyYyCache22 = 0f;
		        float yyYyCache23 = 0f;
		        float yyYyCache24 = 0f;
		        float yyYyCache25 = 0f;
		        float yyYyCache26 = 0f;
		        float yyYyCache27 = 0f;
		        float yyYyCache28 = 0f;
		        float yyYyCache29 = 0f;
		        float yyYyCache30 = 0f;
		        float yyYyCache31 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done && 
		        		 px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done &&
		        		 px16done && px17done && px18done && px19done && px20done && px21done && px22done && px23done && 
		        		 px24done && px25done && px26done && px27done && px28done && px29done && px30done && px31done)) {
		           	yy0 = xx0*yy0;
		        	yy1 = xx1*yy1;
		        	yy2 = xx2*yy2;
		        	yy3 = xx3*yy3;
		        	yy4 = xx4*yy4;
		        	yy5 = xx5*yy5;
		        	yy6 = xx6*yy6;
		        	yy7 = xx7*yy7;
		           	yy8 = xx8*yy8;
		        	yy9 = xx9*yy9;
		        	yy10 = xx10*yy10;
		        	yy11 = xx11*yy11;
		        	yy12 = xx12*yy12;
		        	yy13 = xx13*yy13;
		        	yy14 = xx14*yy14;
		        	yy15 = xx15*yy15;
		           	yy16 = xx16*yy16;
		        	yy17 = xx17*yy17;
		        	yy18 = xx18*yy18;
		        	yy19 = xx19*yy19;
		        	yy20 = xx20*yy20;
		        	yy21 = xx21*yy21;
		        	yy22 = xx22*yy22;
		        	yy23 = xx23*yy23;
		           	yy24 = xx24*yy24;
		        	yy25 = xx25*yy25;
		        	yy26 = xx26*yy26;
		        	yy27 = xx27*yy27;
		        	yy28 = xx28*yy28;
		        	yy29 = xx29*yy29;
		        	yy30 = xx30*yy30;
		        	yy31 = xx31*yy31;
	
				    yy0 += yy0;
				    yy1 += yy1;
				    yy2 += yy2;
				    yy3 += yy3;
				    yy4 += yy4;
				    yy5 += yy5;
				    yy6 += yy6;
				    yy7 += yy7;
				    yy8 += yy8;
				    yy9 += yy9;
				    yy10 += yy10;
				    yy11 += yy11;
				    yy12 += yy12;
				    yy13 += yy13;
				    yy14 += yy14;
				    yy15 += yy15;
				    yy16 += yy16;
				    yy17 += yy17;
				    yy18 += yy18;
				    yy19 += yy19;
				    yy20 += yy20;
				    yy21 += yy21;
				    yy22 += yy22;
				    yy23 += yy23;
				    yy24 += yy24;
				    yy25 += yy25;
				    yy26 += yy26;
				    yy27 += yy27;
				    yy28 += yy28;
				    yy29 += yy29;
				    yy30 += yy30;
				    yy31 += yy31;
				    
				    yy0 += y;
				    yy1 += y;
				    yy2 += y;
				    yy3 += y;
				    yy4 += y;
				    yy5 += y;
				    yy6 += y;
				    yy7 += y;
				    yy8 += y;
				    yy9 += y;
				    yy10 += y;
				    yy11 += y;
				    yy12 += y;
				    yy13 += y;
				    yy14 += y;
				    yy15 += y;
				    yy16 += y;
				    yy17 += y;
				    yy18 += y;
				    yy19 += y;
				    yy20 += y;
				    yy21 += y;
				    yy22 += y;
				    yy23 += y;
				    yy24 += y;
				    yy25 += y;
				    yy26 += y;
				    yy27 += y;
				    yy28 += y;
				    yy29 += y;
				    yy30 += y;
				    yy31 += y;
	
				    xx0 = xxXxCache0 - yyYyCache0 + x0;
				    xx1 = xxXxCache1 - yyYyCache1 + x1;
				    xx2 = xxXxCache2 - yyYyCache2 + x2;
				    xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xx5 = xxXxCache5 - yyYyCache5 + x5;
				    xx6 = xxXxCache6 - yyYyCache6 + x6;
				    xx7 = xxXxCache7 - yyYyCache7 + x7;
				    xx8 = xxXxCache8 - yyYyCache8 + x8;
				    xx9 = xxXxCache9 - yyYyCache9 + x9;
				    xx10 = xxXxCache10 - yyYyCache10 + x10;
				    xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xx13 = xxXxCache13 - yyYyCache13 + x13;
				    xx14 = xxXxCache14 - yyYyCache14 + x14;
				    xx15 = xxXxCache15 - yyYyCache15 + x15;
				    xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xx17 = xxXxCache17 - yyYyCache17 + x17;
				    xx18 = xxXxCache18 - yyYyCache18 + x18;
				    xx19 = xxXxCache19 - yyYyCache19 + x19;
				    xx20 = xxXxCache20 - yyYyCache20 + x20;
				    xx21 = xxXxCache21 - yyYyCache21 + x21;
				    xx22 = xxXxCache22 - yyYyCache22 + x22;
				    xx23 = xxXxCache23 - yyYyCache23 + x23;
				    xx24 = xxXxCache24 - yyYyCache24 + x24;
				    xx25 = xxXxCache25 - yyYyCache25 + x25;
				    xx26 = xxXxCache26 - yyYyCache26 + x26;
				    xx27 = xxXxCache27 - yyYyCache27 + x27;
				    xx28 = xxXxCache28 - yyYyCache28 + x28;
				    xx29 = xxXxCache29 - yyYyCache29 + x29;
				    xx30 = xxXxCache30 - yyYyCache30 + x30;
				    xx31 = xxXxCache31 - yyYyCache31 + x31;
				    
				    xxXxCache0 = xx0*xx0;
				    xxXxCache1 = xx1*xx1;
				    xxXxCache2 = xx2*xx2;
				    xxXxCache3 = xx3*xx3;
				    xxXxCache4 = xx4*xx4;
				    xxXxCache5 = xx5*xx5;
				    xxXxCache6 = xx6*xx6;
				    xxXxCache7 = xx7*xx7;
				    xxXxCache8 = xx8*xx8;
				    xxXxCache9 = xx9*xx9;
				    xxXxCache10 = xx10*xx10;
				    xxXxCache11 = xx11*xx11;
				    xxXxCache12 = xx12*xx12;
				    xxXxCache13 = xx13*xx13;
				    xxXxCache14 = xx14*xx14;
				    xxXxCache15 = xx15*xx15;
				    xxXxCache16 = xx16*xx16;
				    xxXxCache17 = xx17*xx17;
				    xxXxCache18 = xx18*xx18;
				    xxXxCache19 = xx19*xx19;
				    xxXxCache20 = xx20*xx20;
				    xxXxCache21 = xx21*xx21;
				    xxXxCache22 = xx22*xx22;
				    xxXxCache23 = xx23*xx23;
				    xxXxCache24 = xx24*xx24;
				    xxXxCache25 = xx25*xx25;
				    xxXxCache26 = xx26*xx26;
				    xxXxCache27 = xx27*xx27;
				    xxXxCache28 = xx28*xx28;
				    xxXxCache29 = xx29*xx29;
				    xxXxCache30 = xx30*xx30;
				    xxXxCache31 = xx31*xx31;
	
				    yyYyCache0 = yy0*yy0;
				    yyYyCache1 = yy1*yy1;
				    yyYyCache2 = yy2*yy2;
				    yyYyCache3 = yy3*yy3;
				    yyYyCache4 = yy4*yy4;
				    yyYyCache5 = yy5*yy5;
				    yyYyCache6 = yy6*yy6;
				    yyYyCache7 = yy7*yy7;
				    yyYyCache8 = yy8*yy8;
				    yyYyCache9 = yy9*yy9;
				    yyYyCache10 = yy10*yy10;
				    yyYyCache11 = yy11*yy11;
				    yyYyCache12 = yy12*yy12;
				    yyYyCache13 = yy13*yy13;
				    yyYyCache14 = yy14*yy14;
				    yyYyCache15 = yy15*yy15;
				    yyYyCache16 = yy16*yy16;
				    yyYyCache17 = yy17*yy17;
				    yyYyCache18 = yy18*yy18;
				    yyYyCache19 = yy19*yy19;
				    yyYyCache20 = yy20*yy20;
				    yyYyCache21 = yy21*yy21;
				    yyYyCache22 = yy22*yy22;
				    yyYyCache23 = yy23*yy23;
				    yyYyCache24 = yy24*yy24;
				    yyYyCache25 = yy25*yy25;
				    yyYyCache26 = yy26*yy26;
				    yyYyCache27 = yy27*yy27;
				    yyYyCache28 = yy28*yy28;
				    yyYyCache29 = yy29*yy29;
				    yyYyCache30 = yy30*yy30;
				    yyYyCache31 = yy31*yy31;
				    
				    if(!px0done) iter0++;
				    if(!px1done) iter1++;
				    if(!px2done) iter2++;
				    if(!px3done) iter3++;
				    if(!px4done) iter4++;
				    if(!px5done) iter5++;
				    if(!px6done) iter6++;
				    if(!px7done) iter7++;
				    if(!px8done) iter8++;
				    if(!px9done) iter9++;
				    if(!px10done) iter10++;
				    if(!px11done) iter11++;
				    if(!px12done) iter12++;
				    if(!px13done) iter13++;
				    if(!px14done) iter14++;
				    if(!px15done) iter15++;
				    if(!px16done) iter16++;
				    if(!px17done) iter17++;
				    if(!px18done) iter18++;
				    if(!px19done) iter19++;
				    if(!px20done) iter20++;
				    if(!px21done) iter21++;
				    if(!px22done) iter22++;
				    if(!px23done) iter23++;
				    if(!px24done) iter24++;
				    if(!px25done) iter25++;
				    if(!px26done) iter26++;
				    if(!px27done) iter27++;
				    if(!px28done) iter28++;
				    if(!px29done) iter29++;
				    if(!px30done) iter30++;
				    if(!px31done) iter31++;
					
					px0done = px0done || !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);
					px1done = px1done || !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);
					px2done = px2done || !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);
					px3done = px3done || !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);
					px4done = px4done || !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);
					px5done = px5done || !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);
					px6done = px6done || !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);
					px7done = px7done || !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);
					px8done = px8done || !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);
					px9done = px9done || !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);
					px10done = px10done || !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);
					px11done = px11done || !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);
					px12done = px12done || !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);
					px13done = px13done || !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);
					px14done = px14done || !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);
					px15done = px15done || !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);
					px16done = px16done || !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);
					px17done = px17done || !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);
					px18done = px18done || !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);
					px19done = px19done || !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);
					px20done = px20done || !(xxXxCache20 + yyYyCache20 <= 4.0f && iter20<defaultIter);
					px21done = px21done || !(xxXxCache21 + yyYyCache21 <= 4.0f && iter21<defaultIter);
					px22done = px22done || !(xxXxCache22 + yyYyCache22 <= 4.0f && iter22<defaultIter);
					px23done = px23done || !(xxXxCache23 + yyYyCache23 <= 4.0f && iter23<defaultIter);
					px24done = px24done || !(xxXxCache24 + yyYyCache24 <= 4.0f && iter24<defaultIter);
					px25done = px25done || !(xxXxCache25 + yyYyCache25 <= 4.0f && iter25<defaultIter);
					px26done = px26done || !(xxXxCache26 + yyYyCache26 <= 4.0f && iter26<defaultIter);
					px27done = px27done || !(xxXxCache27 + yyYyCache27 <= 4.0f && iter27<defaultIter);
					px28done = px28done || !(xxXxCache28 + yyYyCache28 <= 4.0f && iter28<defaultIter);
					px29done = px29done || !(xxXxCache29 + yyYyCache29 <= 4.0f && iter29<defaultIter);
					px30done = px30done || !(xxXxCache30 + yyYyCache30 <= 4.0f && iter30<defaultIter);
					px31done = px31done || !(xxXxCache31 + yyYyCache31 <= 4.0f && iter31<defaultIter);
	
		        }
	
			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    pictureBuffer[index16] = precomputedColors[iter16];
			    pictureBuffer[index17] = precomputedColors[iter17];
			    pictureBuffer[index18] = precomputedColors[iter18];
			    pictureBuffer[index19] = precomputedColors[iter19];
			    pictureBuffer[index20] = precomputedColors[iter20];
			    pictureBuffer[index21] = precomputedColors[iter21];
			    pictureBuffer[index22] = precomputedColors[iter22];
			    pictureBuffer[index23] = precomputedColors[iter23];
			    pictureBuffer[index24] = precomputedColors[iter24];
			    pictureBuffer[index25] = precomputedColors[iter25];
			    pictureBuffer[index26] = precomputedColors[iter26];
			    pictureBuffer[index27] = precomputedColors[iter27];
			    pictureBuffer[index28] = precomputedColors[iter28];
			    pictureBuffer[index29] = precomputedColors[iter29];
			    pictureBuffer[index30] = precomputedColors[iter30];
			    pictureBuffer[index31] = precomputedColors[iter31];
			    
			    x = x31 + deltaX;
			    pX = pX + 32;
			}
		}		
	}
	
	private void updateMandelbrotImageCGRA_32_v2() {
		float deltaX = mbWidth/pictureWidth;
		float deltaY = mbHeight/pictureHeight;
		int defaultIter = mbIterations;
		int index = 0;
		
		float y = mbY;
		for (int pY = 0 ; pY < pictureHeight ; pY++, y+= deltaY) {
			
			float x = mbX;
			//manual unrolling
			for (int pX = 0 ; pX < pictureWidth ;) {
				
				boolean px0done = false;
				boolean px1done = false;
				boolean px2done = false;
				boolean px3done = false;
				boolean px4done = false;
				boolean px5done = false;
				boolean px6done = false;
				boolean px7done = false;
				boolean px8done = false;
				boolean px9done = false;
				boolean px10done = false;
				boolean px11done = false;
				boolean px12done = false;
				boolean px13done = false;
				boolean px14done = false;
				boolean px15done = false;
				boolean px16done = false;
				boolean px17done = false;
				boolean px18done = false;
				boolean px19done = false;
				boolean px20done = false;
				boolean px21done = false;
				boolean px22done = false;
				boolean px23done = false;

				int index0 = index++;
				int index1 = index++;
				int index2 = index++;
				int index3 = index++;
				int index4 = index++;
				int index5 = index++;
				int index6 = index++;
				int index7 = index++;
				int index8 = index++;
				int index9 = index++;
				int index10 = index++;
				int index11 = index++;
				int index12 = index++;
				int index13 = index++;
				int index14 = index++;
				int index15 = index++;
				int index16 = index++;
				int index17 = index++;
				int index18 = index++;
				int index19 = index++;
				int index20 = index++;
				int index21 = index++;
				int index22 = index++;
				int index23 = index++;
				
				float x0 = x;
				float x1 = x0 + deltaX;
				float x2 = x1 + deltaX;
				float x3 = x2 + deltaX;
				float x4 = x3 + deltaX;
				float x5 = x4 + deltaX;
				float x6 = x5 + deltaX;
				float x7 = x6 + deltaX;
				float x8 = x7 + deltaX;
				float x9 = x8 + deltaX;
				float x10 = x9 + deltaX;
				float x11 = x10 + deltaX;
				float x12 = x11 + deltaX;
				float x13 = x12 + deltaX;
				float x14 = x13 + deltaX;
				float x15 = x14 + deltaX;
				float x16 = x15 + deltaX;
				float x17 = x16 + deltaX;
				float x18 = x17 + deltaX;
				float x19 = x18 + deltaX;
				float x20 = x19 + deltaX;
				float x21 = x20 + deltaX;
				float x22 = x21 + deltaX;
				float x23 = x22 + deltaX;
				
				float xx0 = 0.0f;
				float xx1 = 0.0f;
				float xx2 = 0.0f;
				float xx3 = 0.0f;
				float xx4 = 0.0f;
				float xx5 = 0.0f;
				float xx6 = 0.0f;
				float xx7 = 0.0f;
				float xx8 = 0.0f;
				float xx9 = 0.0f;
				float xx10 = 0.0f;
				float xx11 = 0.0f;
				float xx12 = 0.0f;
				float xx13 = 0.0f;
				float xx14 = 0.0f;
				float xx15 = 0.0f;
				float xx16 = 0.0f;
				float xx17 = 0.0f;
				float xx18 = 0.0f;
				float xx19 = 0.0f;
				float xx20 = 0.0f;
				float xx21 = 0.0f;
				float xx22 = 0.0f;
				float xx23 = 0.0f;
				
				float yy0 = 0.0f;
				float yy1 = 0.0f;
				float yy2 = 0.0f;
				float yy3 = 0.0f;
				float yy4 = 0.0f;
				float yy5 = 0.0f;
				float yy6 = 0.0f;
				float yy7 = 0.0f;
				float yy8 = 0.0f;
				float yy9 = 0.0f;
				float yy10 = 0.0f;
				float yy11 = 0.0f;
				float yy12 = 0.0f;
				float yy13 = 0.0f;
				float yy14 = 0.0f;
				float yy15 = 0.0f;
				float yy16 = 0.0f;
				float yy17 = 0.0f;
				float yy18 = 0.0f;
				float yy19 = 0.0f;
				float yy20 = 0.0f;
				float yy21 = 0.0f;
				float yy22 = 0.0f;
				float yy23 = 0.0f;
				
				int iter0 = 0;
				int iter1 = 0;
				int iter2 = 0;
				int iter3 = 0;
				int iter4 = 0;
				int iter5 = 0;
				int iter6 = 0;
				int iter7 = 0;
				int iter8 = 0;
				int iter9 = 0;
				int iter10 = 0;
				int iter11 = 0;
				int iter12 = 0;
				int iter13 = 0;
				int iter14 = 0;
				int iter15 = 0;
				int iter16 = 0;
				int iter17 = 0;
				int iter18 = 0;
				int iter19 = 0;
				int iter20 = 0;
				int iter21 = 0;
				int iter22 = 0;
				int iter23 = 0;

		        float xxXxCache0 = 0f;
		        float xxXxCache1 = 0f;
		        float xxXxCache2 = 0f;
		        float xxXxCache3 = 0f;
		        float xxXxCache4 = 0f;
		        float xxXxCache5 = 0f;
		        float xxXxCache6 = 0f;
		        float xxXxCache7 = 0f;
		        float xxXxCache8 = 0f;
		        float xxXxCache9 = 0f;
		        float xxXxCache10 = 0f;
		        float xxXxCache11 = 0f;
		        float xxXxCache12 = 0f;
		        float xxXxCache13 = 0f;
		        float xxXxCache14 = 0f;
		        float xxXxCache15 = 0f;
		        float xxXxCache16 = 0f;
		        float xxXxCache17 = 0f;
		        float xxXxCache18 = 0f;
		        float xxXxCache19 = 0f;
		        float xxXxCache20 = 0f;
		        float xxXxCache21 = 0f;
		        float xxXxCache22 = 0f;
		        float xxXxCache23 = 0f;
		        
		        float yyYyCache0 = 0f;
		        float yyYyCache1 = 0f;
		        float yyYyCache2 = 0f;
		        float yyYyCache3 = 0f;
		        float yyYyCache4 = 0f;
		        float yyYyCache5 = 0f;
		        float yyYyCache6 = 0f;
		        float yyYyCache7 = 0f;
		        float yyYyCache8 = 0f;
		        float yyYyCache9 = 0f;
		        float yyYyCache10 = 0f;
		        float yyYyCache11 = 0f;
		        float yyYyCache12 = 0f;
		        float yyYyCache13 = 0f;
		        float yyYyCache14 = 0f;
		        float yyYyCache15 = 0f;
		        float yyYyCache16 = 0f;
		        float yyYyCache17 = 0f;
		        float yyYyCache18 = 0f;
		        float yyYyCache19 = 0f;
		        float yyYyCache20 = 0f;
		        float yyYyCache21 = 0f;
		        float yyYyCache22 = 0f;
		        float yyYyCache23 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done && px4done && px5done && px6done && px7done) && 
		        	   !(px8done && px9done && px10done && px11done && px12done && px13done && px14done && px15done) &&
		        	   !(px16done && px17done && px18done && px19done && px20done && px21done && px22done && px23done)) {
	        	
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 

		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
	        		
		        	yy16 = xx16*yy16;
		        	yy16 += yy16;
		        	yy16 += y;
		        	xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xxXxCache16 = xx16*xx16;
				    yyYyCache16 = yy16*yy16;
				    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
				    
	        		yy17 = xx17*yy17;
	        		yy17 += yy17;
	        		yy17 += y;
	        		xx17 = xxXxCache17 - yyYyCache17 + x17;
	        		xxXxCache17 = xx17*xx17;
	        		yyYyCache17 = yy17*yy17;
	        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
	        	
	        		yy18 = xx18*yy18;
	        		yy18 += yy18;
	        		yy18 += y;
	        		xx18 = xxXxCache18 - yyYyCache18 + x18;
	        		xxXxCache18 = xx18*xx18;
	        		yyYyCache18 = yy18*yy18;
	        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
	        	
	        		yy19 = xx19*yy19;
	        		yy19 += yy19;
	        		yy19 += y;
	        		xx19 = xxXxCache19 - yyYyCache19 + x19;
	        		xxXxCache19 = xx19*xx19;
	        		yyYyCache19 = yy19*yy19;
	        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
	        		
		        	yy20 = xx20*yy20;
		        	yy20 += yy20;
		        	yy20 += y;
		        	xx20 = xxXxCache20 - yyYyCache20 + x20;
				    xxXxCache20 = xx20*xx20;
				    yyYyCache20 = yy20*yy20;
				    if(!px20done){iter20++; px20done = !(xxXxCache20 + yyYyCache20 <= 4.0f && iter20<defaultIter);}
				    
	        		yy21 = xx21*yy21;
	        		yy21 += yy21;
	        		yy21 += y;
	        		xx21 = xxXxCache21 - yyYyCache21 + x21;
	        		xxXxCache21 = xx21*xx21;
	        		yyYyCache21 = yy21*yy21;
	        		if(!px21done) {iter21++; px21done = !(xxXxCache21 + yyYyCache21 <= 4.0f && iter21<defaultIter);}
	        	
	        		yy22 = xx22*yy22;
	        		yy22 += yy22;
	        		yy22 += y;
	        		xx22 = xxXxCache22 - yyYyCache22 + x22;
	        		xxXxCache22 = xx22*xx22;
	        		yyYyCache22 = yy22*yy22;
	        		if(!px22done) {iter22++; px22done = !(xxXxCache22 + yyYyCache22 <= 4.0f && iter22<defaultIter);}
	        	
	        		yy23 = xx23*yy23;
	        		yy23 += yy23;
	        		yy23 += y;
	        		xx23 = xxXxCache23 - yyYyCache23 + x23;
	        		xxXxCache23 = xx23*xx23;
	        		yyYyCache23 = yy23*yy23;
	        		if(!px23done) {iter23++;px23done = !(xxXxCache23 + yyYyCache23 <= 4.0f && iter23<defaultIter);} 
		        }
				        
		        while (!(px0done && px1done && px2done && px3done) && !(px4done && px5done && px6done && px7done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
		        while (!(px8done && px9done && px10done && px11done) && !(px12done && px13done && px14done && px15done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
				    
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
		        }
		        
		        while (!(px16done && px17done && px18done && px19done) && !(px20done && px21done && px22done && px23done)) {
		        	
		        	yy16 = xx16*yy16;
		        	yy16 += yy16;
		        	yy16 += y;
		        	xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xxXxCache16 = xx16*xx16;
				    yyYyCache16 = yy16*yy16;
				    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
				    
	        		yy17 = xx17*yy17;
	        		yy17 += yy17;
	        		yy17 += y;
	        		xx17 = xxXxCache17 - yyYyCache17 + x17;
	        		xxXxCache17 = xx17*xx17;
	        		yyYyCache17 = yy17*yy17;
	        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
	        	
	        		yy18 = xx18*yy18;
	        		yy18 += yy18;
	        		yy18 += y;
	        		xx18 = xxXxCache18 - yyYyCache18 + x18;
	        		xxXxCache18 = xx18*xx18;
	        		yyYyCache18 = yy18*yy18;
	        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
	        	
	        		yy19 = xx19*yy19;
	        		yy19 += yy19;
	        		yy19 += y;
	        		xx19 = xxXxCache19 - yyYyCache19 + x19;
	        		xxXxCache19 = xx19*xx19;
	        		yyYyCache19 = yy19*yy19;
	        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
	        		
		        	yy20 = xx20*yy20;
		        	yy20 += yy20;
		        	yy20 += y;
		        	xx20 = xxXxCache20 - yyYyCache20 + x20;
				    xxXxCache20 = xx20*xx20;
				    yyYyCache20 = yy20*yy20;
				    if(!px20done){iter20++; px20done = !(xxXxCache20 + yyYyCache20 <= 4.0f && iter20<defaultIter);}
				    
	        		yy21 = xx21*yy21;
	        		yy21 += yy21;
	        		yy21 += y;
	        		xx21 = xxXxCache21 - yyYyCache21 + x21;
	        		xxXxCache21 = xx21*xx21;
	        		yyYyCache21 = yy21*yy21;
	        		if(!px21done) {iter21++; px21done = !(xxXxCache21 + yyYyCache21 <= 4.0f && iter21<defaultIter);}
	        	
	        		yy22 = xx22*yy22;
	        		yy22 += yy22;
	        		yy22 += y;
	        		xx22 = xxXxCache22 - yyYyCache22 + x22;
	        		xxXxCache22 = xx22*xx22;
	        		yyYyCache22 = yy22*yy22;
	        		if(!px22done) {iter22++; px22done = !(xxXxCache22 + yyYyCache22 <= 4.0f && iter22<defaultIter);}
	        	
	        		yy23 = xx23*yy23;
	        		yy23 += yy23;
	        		yy23 += y;
	        		xx23 = xxXxCache23 - yyYyCache23 + x23;
	        		xxXxCache23 = xx23*xx23;
	        		yyYyCache23 = yy23*yy23;
	        		if(!px23done) {iter23++;px23done = !(xxXxCache23 + yyYyCache23 <= 4.0f && iter23<defaultIter);} 
		        }
				        
		        while (!(px0done && px1done && px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
			    }
				        
		        while (!(px4done && px5done && px6done && px7done)) {				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
				        
		        while (!(px8done && px9done && px10done && px11done)) {
		        	yy8 = xx8*yy8;
		        	yy8 += yy8;
		        	yy8 += y;
		        	xx8 = xxXxCache8 - yyYyCache8 + x8;
		        	xxXxCache8 = xx8*xx8;
		        	yyYyCache8 = yy8*yy8;
		        	if(!px8done) {iter8++; px8done = !(xxXxCache8 + yyYyCache8 <= 4.0f && iter8<defaultIter);}
		        	
		        	yy9 = xx9*yy9;
		        	yy9 += yy9;
		        	yy9 += y;
		        	xx9 = xxXxCache9 - yyYyCache9 + x9;
		        	xxXxCache9 = xx9*xx9;
		        	yyYyCache9 = yy9*yy9;
		        	if(!px9done){iter9++; px9done = !(xxXxCache9 + yyYyCache9 <= 4.0f && iter9<defaultIter);}
		        	
		        	yy10 = xx10*yy10;
		        	yy10 += yy10;
		        	yy10 += y;
		        	xx10 = xxXxCache10 - yyYyCache10 + x10;
		        	xxXxCache10 = xx10*xx10;
		        	yyYyCache10 = yy10*yy10;
		        	if(!px10done){iter10++; px10done = !(xxXxCache10 + yyYyCache10 <= 4.0f && iter10<defaultIter);}
		        	
		        	yy11 = xx11*yy11;
		        	yy11 += yy11;
		        	yy11 += y;
		        	xx11 = xxXxCache11 - yyYyCache11 + x11;
				    xxXxCache11 = xx11*xx11;
				    yyYyCache11 = yy11*yy11;
				    if(!px11done){iter11++; px11done = !(xxXxCache11 + yyYyCache11 <= 4.0f && iter11<defaultIter);}
			    }
				        
		        while (!(px12done && px13done && px14done && px15done)) {
		        	yy12 = xx12*yy12;
		        	yy12 += yy12;
		        	yy12 += y;
		        	xx12 = xxXxCache12 - yyYyCache12 + x12;
				    xxXxCache12 = xx12*xx12;
				    yyYyCache12 = yy12*yy12;
				    if(!px12done){iter12++; px12done = !(xxXxCache12 + yyYyCache12 <= 4.0f && iter12<defaultIter);}
				    
	        		yy13 = xx13*yy13;
	        		yy13 += yy13;
	        		yy13 += y;
	        		xx13 = xxXxCache13 - yyYyCache13 + x13;
	        		xxXxCache13 = xx13*xx13;
	        		yyYyCache13 = yy13*yy13;
	        		if(!px13done) {iter13++; px13done = !(xxXxCache13 + yyYyCache13 <= 4.0f && iter13<defaultIter);}
	        	
	        		yy14 = xx14*yy14;
	        		yy14 += yy14;
	        		yy14 += y;
	        		xx14 = xxXxCache14 - yyYyCache14 + x14;
	        		xxXxCache14 = xx14*xx14;
	        		yyYyCache14 = yy14*yy14;
	        		if(!px14done) {iter14++; px14done = !(xxXxCache14 + yyYyCache14 <= 4.0f && iter14<defaultIter);}
	        	
	        		yy15 = xx15*yy15;
	        		yy15 += yy15;
	        		yy15 += y;
	        		xx15 = xxXxCache15 - yyYyCache15 + x15;
	        		xxXxCache15 = xx15*xx15;
	        		yyYyCache15 = yy15*yy15;
	        		if(!px15done) {iter15++;px15done = !(xxXxCache15 + yyYyCache15 <= 4.0f && iter15<defaultIter);} 
			    }
				        
		        while (!(px16done && px17done && px18done && px19done)) {
		        	yy16 = xx16*yy16;
		        	yy16 += yy16;
		        	yy16 += y;
		        	xx16 = xxXxCache16 - yyYyCache16 + x16;
				    xxXxCache16 = xx16*xx16;
				    yyYyCache16 = yy16*yy16;
				    if(!px16done){iter16++; px16done = !(xxXxCache16 + yyYyCache16 <= 4.0f && iter16<defaultIter);}
				    
	        		yy17 = xx17*yy17;
	        		yy17 += yy17;
	        		yy17 += y;
	        		xx17 = xxXxCache17 - yyYyCache17 + x17;
	        		xxXxCache17 = xx17*xx17;
	        		yyYyCache17 = yy17*yy17;
	        		if(!px17done) {iter17++; px17done = !(xxXxCache17 + yyYyCache17 <= 4.0f && iter17<defaultIter);}
	        	
	        		yy18 = xx18*yy18;
	        		yy18 += yy18;
	        		yy18 += y;
	        		xx18 = xxXxCache18 - yyYyCache18 + x18;
	        		xxXxCache18 = xx18*xx18;
	        		yyYyCache18 = yy18*yy18;
	        		if(!px18done) {iter18++; px18done = !(xxXxCache18 + yyYyCache18 <= 4.0f && iter18<defaultIter);}
	        	
	        		yy19 = xx19*yy19;
	        		yy19 += yy19;
	        		yy19 += y;
	        		xx19 = xxXxCache19 - yyYyCache19 + x19;
	        		xxXxCache19 = xx19*xx19;
	        		yyYyCache19 = yy19*yy19;
	        		if(!px19done) {iter19++;px19done = !(xxXxCache19 + yyYyCache19 <= 4.0f && iter19<defaultIter);} 
		        }
		        
		        while (!(px20done && px21done && px22done && px23done)) {
		        	yy20 = xx20*yy20;
		        	yy20 += yy20;
		        	yy20 += y;
		        	xx20 = xxXxCache20 - yyYyCache20 + x20;
				    xxXxCache20 = xx20*xx20;
				    yyYyCache20 = yy20*yy20;
				    if(!px20done){iter20++; px20done = !(xxXxCache20 + yyYyCache20 <= 4.0f && iter20<defaultIter);}
				    
	        		yy21 = xx21*yy21;
	        		yy21 += yy21;
	        		yy21 += y;
	        		xx21 = xxXxCache21 - yyYyCache21 + x21;
	        		xxXxCache21 = xx21*xx21;
	        		yyYyCache21 = yy21*yy21;
	        		if(!px21done) {iter21++; px21done = !(xxXxCache21 + yyYyCache21 <= 4.0f && iter21<defaultIter);}
	        	
	        		yy22 = xx22*yy22;
	        		yy22 += yy22;
	        		yy22 += y;
	        		xx22 = xxXxCache22 - yyYyCache22 + x22;
	        		xxXxCache22 = xx22*xx22;
	        		yyYyCache22 = yy22*yy22;
	        		if(!px22done) {iter22++; px22done = !(xxXxCache22 + yyYyCache22 <= 4.0f && iter22<defaultIter);}
	        	
	        		yy23 = xx23*yy23;
	        		yy23 += yy23;
	        		yy23 += y;
	        		xx23 = xxXxCache23 - yyYyCache23 + x23;
	        		xxXxCache23 = xx23*xx23;
	        		yyYyCache23 = yy23*yy23;
	        		if(!px23done) {iter23++;px23done = !(xxXxCache23 + yyYyCache23 <= 4.0f && iter23<defaultIter);} 
		        }
						        
			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    pictureBuffer[index8] = precomputedColors[iter8];
			    pictureBuffer[index9] = precomputedColors[iter9];
			    pictureBuffer[index10] = precomputedColors[iter10];
			    pictureBuffer[index11] = precomputedColors[iter11];
			    pictureBuffer[index12] = precomputedColors[iter12];
			    pictureBuffer[index13] = precomputedColors[iter13];
			    pictureBuffer[index14] = precomputedColors[iter14];
			    pictureBuffer[index15] = precomputedColors[iter15];
			    pictureBuffer[index16] = precomputedColors[iter16];
			    pictureBuffer[index17] = precomputedColors[iter17];
			    pictureBuffer[index18] = precomputedColors[iter18];
			    pictureBuffer[index19] = precomputedColors[iter19];
			    pictureBuffer[index20] = precomputedColors[iter20];
			    pictureBuffer[index21] = precomputedColors[iter21];
			    pictureBuffer[index22] = precomputedColors[iter22];
			    pictureBuffer[index23] = precomputedColors[iter23];
			    
				px0done = false;
				px1done = false;
				px2done = false;
				px3done = false;
				px4done = false;
				px5done = false;
				px6done = false;
				px7done = false;


				index0 = index++;
				index1 = index++;
				index2 = index++;
				index3 = index++;
				index4 = index++;
				index5 = index++;
				index6 = index++;
				index7 = index++;
				
				x0 = x;
				x1 = x0 + deltaX;
				x2 = x1 + deltaX;
				x3 = x2 + deltaX;
				x4 = x3 + deltaX;
				x5 = x4 + deltaX;
				x6 = x5 + deltaX;
				x7 = x6 + deltaX;

				
				xx0 = 0.0f;
				xx1 = 0.0f;
				xx2 = 0.0f;
				xx3 = 0.0f;
				xx4 = 0.0f;
				xx5 = 0.0f;
				xx6 = 0.0f;
				xx7 = 0.0f;
				
				yy0 = 0.0f;
				yy1 = 0.0f;
				yy2 = 0.0f;
				yy3 = 0.0f;
				yy4 = 0.0f;
				yy5 = 0.0f;
				yy6 = 0.0f;
				yy7 = 0.0f;

				iter0 = 0;
				iter1 = 0;
				iter2 = 0;
				iter3 = 0;
				iter4 = 0;
				iter5 = 0;
				iter6 = 0;
				iter7 = 0;

		        xxXxCache0 = 0f;
		        xxXxCache1 = 0f;
		        xxXxCache2 = 0f;
		        xxXxCache3 = 0f;
		        xxXxCache4 = 0f;
		        xxXxCache5 = 0f;
		        xxXxCache6 = 0f;
		        xxXxCache7 = 0f;
		        
		        yyYyCache0 = 0f;
		        yyYyCache1 = 0f;
		        yyYyCache2 = 0f;
		        yyYyCache3 = 0f;
		        yyYyCache4 = 0f;
		        yyYyCache5 = 0f;
		        yyYyCache6 = 0f;
		        yyYyCache7 = 0f;
		        
		        while (!(px0done && px1done && px2done && px3done) && !(px4done && px5done && px6done && px7done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
		    		yy5 = xx5*yy5;
		    		yy5 += yy5;
		    		yy5 += y;
		    		xx5 = xxXxCache5 - yyYyCache5 + x5;
		    		xxXxCache5 = xx5*xx5;
		    		yyYyCache5 = yy5*yy5;
		    		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
		    	
		    		yy6 = xx6*yy6;
		    		yy6 += yy6;
		    		yy6 += y;
		    		xx6 = xxXxCache6 - yyYyCache6 + x6;
		    		xxXxCache6 = xx6*xx6;
		    		yyYyCache6 = yy6*yy6;
		    		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
		    	
		    		yy7 = xx7*yy7;
		    		yy7 += yy7;
		    		yy7 += y;
		    		xx7 = xxXxCache7 - yyYyCache7 + x7;
		    		xxXxCache7 = xx7*xx7;
		    		yyYyCache7 = yy7*yy7;
		    		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
		        while (!(px0done && px1done && px2done && px3done)) {
		        	yy0 = xx0*yy0;
		        	yy0 += yy0;
		        	yy0 += y;
		        	xx0 = xxXxCache0 - yyYyCache0 + x0;
		        	xxXxCache0 = xx0*xx0;
		        	yyYyCache0 = yy0*yy0;
		        	if(!px0done) {iter0++; px0done = !(xxXxCache0 + yyYyCache0 <= 4.0f && iter0<defaultIter);}
		        	
		        	yy1 = xx1*yy1;
		        	yy1 += yy1;
		        	yy1 += y;
		        	xx1 = xxXxCache1 - yyYyCache1 + x1;
		        	xxXxCache1 = xx1*xx1;
		        	yyYyCache1 = yy1*yy1;
		        	if(!px1done){iter1++; px1done = !(xxXxCache1 + yyYyCache1 <= 4.0f && iter1<defaultIter);}
		        	
		        	yy2 = xx2*yy2;
		        	yy2 += yy2;
		        	yy2 += y;
		        	xx2 = xxXxCache2 - yyYyCache2 + x2;
		        	xxXxCache2 = xx2*xx2;
		        	yyYyCache2 = yy2*yy2;
		        	if(!px2done){iter2++; px2done = !(xxXxCache2 + yyYyCache2 <= 4.0f && iter2<defaultIter);}
		        	
		        	yy3 = xx3*yy3;
		        	yy3 += yy3;
		        	yy3 += y;
		        	xx3 = xxXxCache3 - yyYyCache3 + x3;
				    xxXxCache3 = xx3*xx3;
				    yyYyCache3 = yy3*yy3;
				    if(!px3done){iter3++; px3done = !(xxXxCache3 + yyYyCache3 <= 4.0f && iter3<defaultIter);}
			    }
				        
		        while (!(px4done && px5done && px6done && px7done)) {				    
		        	yy4 = xx4*yy4;
		        	yy4 += yy4;
		        	yy4 += y;
		        	xx4 = xxXxCache4 - yyYyCache4 + x4;
				    xxXxCache4 = xx4*xx4;
				    yyYyCache4 = yy4*yy4;
				    if(!px4done){iter4++; px4done = !(xxXxCache4 + yyYyCache4 <= 4.0f && iter4<defaultIter);}
				    
	        		yy5 = xx5*yy5;
	        		yy5 += yy5;
	        		yy5 += y;
	        		xx5 = xxXxCache5 - yyYyCache5 + x5;
	        		xxXxCache5 = xx5*xx5;
	        		yyYyCache5 = yy5*yy5;
	        		if(!px5done) {iter5++;	px5done = !(xxXxCache5 + yyYyCache5 <= 4.0f && iter5<defaultIter);}
	        	
	        		yy6 = xx6*yy6;
	        		yy6 += yy6;
	        		yy6 += y;
	        		xx6 = xxXxCache6 - yyYyCache6 + x6;
	        		xxXxCache6 = xx6*xx6;
	        		yyYyCache6 = yy6*yy6;
	        		if(!px6done) {iter6++; px6done = !(xxXxCache6 + yyYyCache6 <= 4.0f && iter6<defaultIter);}
	        	
	        		yy7 = xx7*yy7;
	        		yy7 += yy7;
	        		yy7 += y;
	        		xx7 = xxXxCache7 - yyYyCache7 + x7;
	        		xxXxCache7 = xx7*xx7;
	        		yyYyCache7 = yy7*yy7;
	        		if(!px7done) {iter7++;px7done = !(xxXxCache7 + yyYyCache7 <= 4.0f && iter7<defaultIter);} 
			    }
		        
			    pictureBuffer[index0] = precomputedColors[iter0];
			    pictureBuffer[index1] = precomputedColors[iter1];
			    pictureBuffer[index2] = precomputedColors[iter2];
			    pictureBuffer[index3] = precomputedColors[iter3];
			    pictureBuffer[index4] = precomputedColors[iter4];
			    pictureBuffer[index5] = precomputedColors[iter5];
			    pictureBuffer[index6] = precomputedColors[iter6];
			    pictureBuffer[index7] = precomputedColors[iter7];
			    
			    x = x7 + deltaX;
			    pX = pX + 32;
			}
		}		
	}

	
	public void show() {
		//updateMandelbrotImage();                    //   80x60, CGRA16: without CGRA:   21266864, with CGRA:  2114815, speedup: 10,056; 
		                                              // 320x240, CGRA16: without CGRA:  341487270, with CGRA: 32133003, speedup: 10.627; 
		                                              // 480x270, CGRA16: without CGRA:  576721353, with CGRA: 59129251, speedup:  9.754;
		                                              // 640x480, CGRA16: without CGRA: 1366447960, with CGRA: 139951793, speedup: 9.764;
		
		//updateMandelbrotImageCGRA_2();              //   80x60, CGRA16: without CGRA:   27548946, with CGRA:  1832583, speedup: 15,033;
		
		//updateMandelbrotImageCGRA_2_if();           //   80x60, CGRA16: without CGRA:   25090445, with CGRA:  2068269, speedup: 12,131;
		
		//updateMandelbrotImageCGRA_2_v2();           //   80x60, CGRA16: without CGRA:   26080649, with CGRA:  1650464, speedup: 15,802;
		
		//updateMandelbrotImageCGRA_4();              //   80x60, CGRA16: without CGRA:   28297173, with CGRA:  1471672, speedup: 19,228;
		
		//updateMandelbrotImageCGRA_4_if();           //   80x60, CGRA16: without CGRA:   24271857, with CGRA:  1408242, speedup: 17,236; 
		                                              // 320x240, CGRA16: without CGRA:  386057726, with CGRA: 19384219, speedup: 19.916;
		
		//updateMandelbrotImageCGRA_4_ifelse();       //   80x60, CGRA16: without CGRA:   26499034, with CGRA:  1393559, speedup: 19.015; 
		                                              // 320x240, CGRA16: without CGRA:  445489319, with CGRA: 20920718, speedup: 21.294;
		
		//updateMandelbrotImageCGRA_4_ifelse_v2();    //   80x60, CGRA16: without CGRA:   27553211, with CGRA:  1644197, speedup: 16.758; 
		                                              // 320x240, CGRA16: without CGRA:  439484018, with CGRA: 23082763, speedup: 19.039;
		
		//updateMandelbrotImageCGRA_4_v2();           //   80x60, CGRA16: without CGRA:   26359653, with CGRA:  1385320, speedup: 19,028; 
		                                              // 320x240, CGRA16: without CGRA:  400988572, with CGRA: 19039277, speedup: 21.061;
		
		//updateMandelbrotImageCGRA_4_v3();           //   80x60, CGRA16: without CGRA:   25427902, with CGRA:  1451995, speedup: 17.512; 
		                                              // 320x240, CGRA16: without CGRA:  390089060, with CGRA: 19693081, speedup: 19.808;
		
		//updateMandelbrotImageCGRA_5();              //   80x60, CGRA16: without CGRA:   29925160, with CGRA:  1436808, speedup: 20,802;
		
		//updateMandelbrotImageCGRA_5_if();           //   80x60, CGRA16: without CGRA:   24332666, with CGRA:  1436754, speedup: 16,936;
		
		//updateMandelbrotImageCGRA_5_v2();           //   80x60, CGRA16: without CGRA:   27598616, with CGRA:  1402440, speedup: 19,679; 
		                                              // 320x240, CGRA16: without CGRA:  401829158, with CGRA: 18317268, speedup: 21.937;
		
		//updateMandelbrotImageCGRA_8();              //   80x60, CGRA16: without CGRA:   31118683, with CGRA:  1440687, speedup: 21,600;
		
		//updateMandelbrotImageCGRA_8_if();           //   80x60, CGRA16: without CGRA:   24263496, with CGRA:  1466222, speedup: 16,548;
		
		//updateMandelbrotImageCGRA_8_v2();           //   80x60, CGRA16: without CGRA:   28490100, with CGRA:  1391825, speedup: 20.470; 
		                                              // 320x240, CGRA16: without CGRA:  409348075, with CGRA: 17971267, speedup: 22.777;
		
		//updateMandelbrotImageCGRA_8_v3();           //   80x60, CGRA16: without CGRA:   26147055, with CGRA:  1296922, speedup: 20.161; 
		                                              // 320x240, CGRA16: without CGRA:  397416068, with CGRA: 17233937, speedup: 23.068;
		
		//updateMandelbrotImageCGRA_16();             //   80x60, CGRA16: without CGRA:   37223039, with CGRA:  1525652, speedup: 24,398;
		
		//updateMandelbrotImageCGRA_16_v2();          //   80x60, CGRA16: without CGRA:   33301418, with CGRA:  1586498, speedup: 20.991; 
		                                              // 320x240, CGRA16: without CGRA:  426311516, with CGRA: 18103937, speedup: 23.548;
		
		//updateMandelbrotImageCGRA_16_v3();          //   80x60, CGRA16: without CGRA:   28413028, with CGRA:  1393282, speedup: 20.393; 
		                                              // 320x240, CGRA16: without CGRA:  407841286, with CGRA: 17844542, speedup: 22.855;
		
		//updateMandelbrotImageCGRA_16_v4();          //   80x60, CGRA16: without CGRA:   26023580, with CGRA:  1356554, speedup: 19.184; 
		                                              // 320x240, CGRA16: without CGRA:  395180540, with CGRA: 17724027, speedup: 22.296;
		
		//updateMandelbrotImageCGRA_16_v5();          //*  80x60, CGRA16: without CGRA:   26342541, with CGRA:  1159160, speedup: 22.726; 
		                                              // 320x240, CGRA16: without CGRA:  401601345, with CGRA: 14126205, speedup: 28.430;
		
		//updateMandelbrotImageCGRA_16_v6();          //   80x60, CGRA16: without CGRA:   25984286, with CGRA:  1161883, speedup: 22.364; 
		                                              // 320x240, CGRA16: without CGRA:  400221826, with CGRA: 14348237, speedup: 27.893;
		
		//updateMandelbrotImageCGRA_20();             //   80x60, CGRA16: without CGRA:   46305363, with CGRA:  2011229, speedup: 23,023;
		
		
		/** the best version for cgra acceleration **/
		updateMandelbrotImageCGRA_20_v2();          //   80x60, CGRA16: without CGRA:   26427515, with CGRA:  1225270, speedup: 21.569; 
		                                              //*320x240, CGRA16: without CGRA:  395865927, with CGRA: 13882264, speedup: 28.516;
                                                      //*480x270, CGRA16: without CGRA:  661218354, with CGRA: 19807159, speedup: 33.383;
                                                      //*640x480, CGRA16: without CGRA: 1556326131, with CGRA: 45718351, speedup: 34.042;
		
		
		//updateMandelbrotImageCGRA_20_v3();          //   80x60, CGRA16: without CGRA:   26142612, with CGRA:  1257030, speedup: 20.797; 
		                                              //*320x240, CGRA16: without CGRA:  395056862, with CGRA: 13854724, speedup: 28.514; 
		                                              // 480x270, CGRA16: without CGRA:  661569360, with CGRA: 26079390, speedup: 25.368;
		                                              // 640x480, CGRA16: without CGRA: 1555721592, with CGRA: 60791533, speedup: 25.591;
		                                              
		//updateMandelbrotImageCGRA_24();             //*480x270, CGRA16: without CGRA:  664565666, with CGRA: 19404280, speedup: 34.248; 
		                                              // 624x468, CGRA16: without CGRA: 1480038876, with CGRA: 42691727, speedup: 34.668;
		
		//updateMandelbrotImageCGRA_24_v2();          // 480x270, CGRA16: without CGRA:  666043180, with CGRA: 20393973, speedup: 32.659; 
		                                              // 624x468, CGRA16: without CGRA: 1489813456, with CGRA: 45057811, speedup: 33.064;
		
		//updateMandelbrotImageCGRA_24_v3();          // 480x270, CGRA16: without CGRA:  663497244, with CGRA: 20313838, speedup: 32.662; 
		                                              // 624x468, CGRA16: without CGRA: 1482057185, with CGRA: 44975011, speedup: 32.953;
		
		//updateMandelbrotImageCGRA_32();             // NOT runnable due to the huge frame stack size
		//updateMandelbrotImageCGRA_32_v2();          // NOT synthesizable 
		
		//check();
		//printArray("pictureBuffer", pictureBuffer);
	}
	
	public void check() {
		boolean passed = true;
		for(int i = 0; i < pictureBuffer.length; i++) {
			if(pictureBuffer[i] != pictureBufferRef[i]) {
				//System.out.println("Error: pictureBuffer[" + i + "]=" + pictureBuffer[i] + ", pictureBufferRef[" + i + "]=" + pictureBufferRef[i]);
				System.out.println("pictureBuffer[" + i + "]=" + pictureBuffer[i] + ", pictureBufferRef[" + i + "]=" + pictureBufferRef[i]);

				passed = false;
			}
		}
		System.out.println(passed?"\npassed!":"\nfailed!");
	}
	
	public static void main(String[] args){
		MandelbrotCGRA mbc = new MandelbrotCGRA();
		mbc.show();
	}
	
	public static void printArray(String name, int[] ia) {
		System.out.print(name + ":");
		
		for(int i = 0; i < ia.length; i++) {
			System.out.print(ia[i] + ((i+1) % 10 == 0 ? ",\n":", "));
		}
		
		System.out.println("\n");
	}

}
